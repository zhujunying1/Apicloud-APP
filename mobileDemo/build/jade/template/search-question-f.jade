extends ../layout/layout
block head
    link(rel='stylesheet', href='../css/about-note.css')
block body
    .section-note.mine-question#content
    mixin lst
        | {{ for(var p in it){  }}
        | {{ if(!isEmpty(it[p].imgPath)){  }}
        .section-note-content.note-content-Img(tapmode,onclick="detail('{{=it[p].id}}','{{=it[p].courseId}}','{{=it[p].taskId}}','{{=it[p].memberId}}')")
            .course-question-title.mine-question-title
                p {{=it[p].title}}
                //p {{=it[p].title}}
            .section-note-top
                .note-img
                    | {{ var imgPath=it[p].imgPath.split(','); }}
                    | {{ for(var i in imgPath) { }}
                    | {{if(i<1){ }}
                    img(src="{{=static_url+imgPath[i]}}", alt='',tapmode,onclick="openImageBrower('{{=it[p].imgPath}}','{{=i}}')")
                    | {{ } }}
                    | {{ } }}
                .note-font
                    p {{=!isEmpty(it[p].contentSummary)?it[p].contentSummary:''}}
            .section-note-message
                span
                    i.icon-play-o
                    | {{ if(!isEmpty(it[p].taskprogress)){ }}
                    b {{=formatSeconds(it[p].taskprogress)}}
                    | {{ } }}
                    b {{ if(!isEmpty(it[p].updateTime)) { }}{{=formatDate(it[p].updateTime,'Y')+'-'+formatDate(it[p].updateTime,'M')+'-'+formatDate(it[p].updateTime,'D')}} {{ } }}
                    b {{ if(!isEmpty(it[p].updateTime)) { }}{{=formatDate(it[p].updateTime,'h')+':'+formatDate(it[p].updateTime,'m')}} {{ } }}
                    b {{=it[p].nikeName}}
                span
                    i.icon-replys
                    b {{=it[p].clickCount}}
        | {{  } else {  }}
        .section-note-content.note-content-noneImg(tapmode,onclick="detail('{{=it[p].id}}','{{=it[p].courseId}}','{{=it[p].taskId}}','{{=it[p].memberId}}')")
            .course-question-title.mine-question-title
                .note-font
                    p {{=it[p].title}}
                    //p {{=it[p].title}}
            .section-note-top
                .note-font
                    p {{=!isEmpty(it[p].contentSummary)?it[p].contentSummary:''}}
            .section-note-message
                span
                    i.icon-play-o
                    | {{ if(!isEmpty(it[p].taskprogress)){ }}
                    b {{=formatSeconds(it[p].taskprogress)}}
                    | {{ } }}
                    b {{ if(!isEmpty(it[p].updateTime)) { }}{{=formatDate(it[p].updateTime,'Y')+'-'+formatDate(it[p].updateTime,'M')+'-'+formatDate(it[p].updateTime,'D')}} {{ } }}
                    b {{ if(!isEmpty(it[p].updateTime)) { }} {{=formatDate(it[p].updateTime,'h')+':'+formatDate(it[p].updateTime,'m')}} {{ } }}
                    b {{=it[p].nikeName}}
                span
                    i.icon-replys
                    b {{=isEmpty(it[p].replyCount)?0:it[p].replyCount}}
        | {{ } }}
        | {{ } }}
    script(id='tpl',type='text/x-dot-template')
        +lst
block scripts
    script(src='../script/fx.js', type='text/javascript', charset='utf-8')
    script(type='text/javascript').
        function detail(obj, courseId, taskId, memberId) {
            courseId = isEmpty(courseId) || courseId == undefined || courseId == 'undefined' || courseId == 'null' ? '课程id' : courseId;
            taskId = isEmpty(taskId) || taskId == undefined || taskId == 'undefined' || taskId == 'null' ? '课程id' : taskId;
            api.openWin({
                name: 'question-detail-head',
                url: 'question-detail-head.html',
                delay: 200,
                pageParam: {id: obj, courseId: courseId, taskId: taskId, memberId: memberId, qf: 'question-detail'} //问题id
            });
        }
        var total = '';
        var pageNum = 5;
        var is_loding = false;
        function getData(page) {
            var param = {
                token: $api.getStorage('token'),
                keyWords: keyword,
                findType: 2,
                pageNo: page,
                pageSize: pageNum
            };
            if (page == 1 && show_pro && !is_loding) {
                api.showProgress({
                    title: '加载中',
                    modal: false
                });
            }
            ajaxRequest('api/studytools/findcontent/v2.1', 'get', param, function (ret, err) {//003.002 内容搜索
                is_loding = true;
                api.refreshHeaderLoadDone();
                if (show_pro) {
                    api.hideProgress();
                }
                if (err) {
                    api.toast({
                        msg: err.msg,
                        location: 'middle'
                    });
                    return false;
                }
                var tpl = $('#tpl').html();
                var content = doT.template(tpl);
                if (ret && ret.state == 'success') {
                    if (isEmpty(ret.data) || isEmpty(ret.totalCount)) {
                        $('#content').html('');
                        $('body').addClass('null');
                        return false;
                    }
                    //                    if(ret.data == ''){
                    //                        alert(11);
                    //                        //$('#content').html();
                    //                        $('body').addClass('null');
                    //                        return false;
                    //                    }else{

                    total = ret.totalCount;
                    $('body').removeClass('null');
                    if (page == 1) {
                        $('#content').html(content(ret.data));
                    } else {
                        $('#content').append(content(ret.data));
                    }
                    //}
                    //api.parseTapmode();
                } else {
                    $('#content').html('');
                    $('body').addClass('null');
                    /*api.toast({
                     msg: ret.msg,
                     location: 'middle'
                     });*/
                }
            });
        }
        var keyword = '';
        apiready = function () {
            $('#content').html('');
            $('body').addClass('null');
            var currentPage = 1;
            api.setRefreshHeaderInfo({
                visible: true,
                loadingImg: 'widget://image/arrow-down-o.png',
                bgColor: '#f3f3f3',
                textColor: '#787b7c',
                textDown: '下拉更多',
                textUp: '松开刷新',
                showTime: false
            }, function (ret, err) {
                getData(1);
                currentPage = 1;
            });
            //滚动到底部
            api.addEventListener({
                name: 'scrolltobottom'
            }, function (ret, err) {
                if (currentPage < Math.ceil(total / pageNum)) {
                    currentPage++;
                    getData(currentPage);
                } else {
                    api.toast({
                        msg: '加载完成！!'
                    });
                }
            });
            //我的问题搜索
            api.addEventListener({
                name: 'lx_question'
            }, function (ret, err) {
                keyword = ret.value.keyword;
                getData(1);
            });
        };

