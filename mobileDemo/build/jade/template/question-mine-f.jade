extends ../layout/layout
block head
    link(rel='stylesheet', type='text/css', href='../css/reset.css')
    link(rel='stylesheet', type='text/css', href='../css/z_style.css')
    link(rel='stylesheet', type='text/css', href='../css/api.css')
    link(rel='stylesheet', href='../css/Sstyle.css')
block body
    #content
    mixin lst
        | {{ for(var p in it){ }}
        .toptit(tapmode,onclick="get_note('{{=it[p].courseId}}','{{=it[p].subjectID}}','{{=it[p].categoryId}}','{{=it[p].chapterId}}','{{=it[p].subjectName}}','{{=it[p].categoryName}}','{{=it[p].courseName}}','{{=it[p].chapterName}}')")
            h4 {{=it[p].courseName}}
        | {{ }  }}
    script(id='tpl',type='text/x-dot-template')
        +lst
block scripts
    script(type="text/javascript").
        function get_note(courseId, subjectID, categoryId, chapterId, subjectName, categoryName, courseName, chapterName) {
            api.closeWin({name: 'new-question'});
            if (!isEmpty(api.pageParam.type) && api.pageParam.type == 'notes') {
                api.openWin({
                    name: 'new-mine',
                    url: 'new-mine.html',
                    delay: 200,
                    pageParam: {
                        courseId: courseId,
                        subjectId: subjectID,
                        categoryId: categoryId,
                        chapterId: chapterId,
                        subjectName: subjectName,
                        categoryName: categoryName,
                        courseName: courseName,
                        chapterName: chapterName,
                        type: 'notes'
                    }
                });
            } else {
                api.openWin({
                    name: 'new-question',
                    url: 'new-question.html',
                    delay: 200,
                    pageParam: {
                        courseId: courseId,
                        subjectId: subjectID,
                        categoryId: categoryId,
                        chapterId: chapterId,
                        subjectName: subjectName,
                        categoryName: categoryName,
                        courseName: courseName,
                        chapterName: chapterName,
                        title: api.pageParam.title,
                        content: api.pageParam.content,
                        img: api.pageParam.img,
                        soundlen: api.pageParam.soundlen,
                        soundPath: api.pageParam.soundPath,
                        name: 'question'
                    }
                });
            }

        }
        var pageSize = 10;
        var is_loding = false;
        var totalCount;
        function getDate(page) {
            var param = {};
            param.pageSize = pageSize;
            param.pageNo = page;
            param.token = $api.getStorage('token');
            if (page == 1 && show_pro && !is_loding) {
                api.showProgress({
                    title: '加载中',
                    modal: false
                });
            }
            ajaxRequest('api/v2.1/learning/learningcourse', 'get', param, function (ret, err) {
                is_loding = true;
                if (err) {
                    api.toast({
                        msg: err.msg,
                        location: 'middle'
                    });
                    return false;
                }
                var tpl = $('#tpl').html();
                var content = doT.template(tpl);
                if (ret && ret.state == 'success') {
                    if (page == 1) {
                        totalCount = ret.data.total;
                        $('#content').html(content(ret.data.courselist));
                    } else {
                        $('#content').append(content(ret.data.courselist));
                    }

                    saveExpire(ret.data.courselist);

                    api.parseTapmode();
                } else {
                    api.toast({
                        msg: ret.msg,
                        location: 'middle'
                    });
                }
            });
        }
        apiready = function () {
            getDate(1);
            var currentPage = 1;
            api.setRefreshHeaderInfo({
                visible: true,
                loadingImg: 'widget://image/arrow-down-o.png',
                bgColor: '#f3f3f3',
                textColor: '#787b7c',
                textDown: '下拉更多',
                textUp: '松开刷新',
                showTime: false
            }, function (ret, err) {
                getDate(1);
                currentPage = 1;
            });
            //滚动到底部
            api.addEventListener({
                name: 'scrolltobottom'
            }, function (ret, err) {
                if (currentPage < Math.ceil(totalCount / pageSize)) {
                    currentPage++;
                    getDate(currentPage);
                }
            });
        };
