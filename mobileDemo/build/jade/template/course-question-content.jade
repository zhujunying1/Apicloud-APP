extends ../layout/layout
block head
    link(rel='stylesheet', href='../css/common-component.css')
    link(rel='stylesheet', href='../css/about-note.css')
block body
    .course-question#content
    mixin lst
        | {{for(var p in it) { }}
        .section-note-content.course-question-content.note-content-Img(tapmode,onclick="detail('{{=it[p].id}}','{{=it[p].taskId}}','{{=it[p].courseId}}','{{=it[p].memberId}}','{{=it[p].taskType}}','{{=it[p].taskprogress}}')")
            .course-question-title
                p {{=it[p].title}}
            .section-note-top
                | {{if(!isEmpty(it[p].imgPath)) { }}
                .note-img
                    | {{ var imgPath=it[p].imgPath.split(','); }}
                    | {{ for(var i in imgPath) { }}
                    | {{if(i<=1){ }}
                    img(src='{{=static_url+imgPath[i]}}', alt='')
                    | {{ } }}
                    | {{ } }}
                | {{ } }}
                .note-font
                    p {{=!isEmpty(it[p].contentSummary)?it[p].contentSummary:''}}
            .section-note-message
                span
                    | {{if(it[p].taskprogress && parseInt(it[p].taskprogress) && !isEmpty(it[p].taskType)){ }}
                    i
                        img.video-link-img(src='../image/section-note-timer.png', alt='')
                    b  {{=formatType(it[p].taskType,it[p].taskprogress)}}
                    |  {{ } }}
                    b  {{ if(!isEmpty(it[p].updateTime)) { }}{{=formatDate(it[p].updateTime,'Y')+'-'+formatDate(it[p].updateTime,'M')+'-'+formatDate(it[p].updateTime,'D')}} {{ } }}
                    b {{ if(!isEmpty(it[p].updateTime)) { }}{{=formatDate(it[p].updateTime,'h')+':'+formatDate(it[p].updateTime,'m')}}{{ } }}
                    b {{=it[p].nikeName}}
                span
                    i
                        img(src='../image/note-message-o.png', alt='')
                    b {{=!isEmpty(it[p].replyCount)?it[p].replyCount:0}}
        | {{ } }}
    script(id='tpl',type='text/x-dot-template')
        +lst
block scripts
    script(type='text/javascript').
        function detail(obj, taskId, courseId, memberId, taskType, taskprogress) {
            courseId = isEmpty(courseId) || courseId == undefined || courseId == 'undefined' ? '课程id' : courseId;
            taskId = isEmpty(taskId) || taskId == undefined || taskId == 'undefined' ? '' : taskId;
            taskType = isEmpty(taskType) || taskType == undefined || taskType == 'undefined' ? '' : taskType;
            taskprogress = isEmpty(taskprogress) || taskprogress == undefined || taskprogress == 'undefined' ? 0 : taskprogress;
            api.openWin({
                name: 'question-detail-head',
                url: 'question-detail-head.html',
                delay: 200,
                pageParam: {
                    id: obj,//问题id
                    taskId: taskId,
                    courseId: courseId,
                    memberId: memberId,
                    taskType: taskType,
                    taskprogress: taskprogress,
                    qf: 'question-detail'
                }
            });
        }
        var is_loding = false;
        function getData(page) {
            var param = {};
            param.categoryId = api.pageParam.categoryId;
            param.subjectId = api.pageParam.subjectId;
            param.courseid = api.pageParam.course_id;
            param.self = 0;
            param.ordertype = 1;
            param.pageSize = pageSize;
            param.pageNo = page;
            param.token = $api.getStorage('token');
            if (page == 1 && show_pro && !is_loding) {
                api.showProgress({
                    title: '加载中',
                    modal: false
                });
            }
            ajaxRequest('api/studytools/questionlist/v2.1', 'get', param, function (ret, err) {//003.206
                is_loding = true;
                api.refreshHeaderLoadDone();
                if (show_pro) {
                    api.hideProgress();
                }

                if (err) {
                    api.toast({
                        msg: err.msg,
                        location: 'middle'
                    });
                    return false;
                }
                var tpl = $('#tpl').html();
                var content = doT.template(tpl);
                if (ret && ret.state == 'success') {
                    total = ret.totalCount;
                    if (page == 1) {
                        if (isEmpty(ret.data)) {
                            $('body').addClass('null');
                            return false;
                        }
                        $('body').removeClass('null');
                        $('#content').html(content(ret.data));
                    } else {
                        if (isEmpty(ret.data)) {
                            return false;
                        }
                        $('#content').append(content(ret.data));
                    }
                    audioDom();
                    api.parseTapmode();
                }
                /*else {
                 api.toast({
                 msg: ret.msg,
                 location: 'middle'
                 });
                 }*/
            });
        }

        var total = 0;
        var pageSize = 10;
        apiready = function () {
            getData(1);
            var currentPage = 1;
            api.setRefreshHeaderInfo({
                visible: true,
                loadingImg: 'widget://image/arrow-down-o.png',
                bgColor: '#f3f3f3',
                textColor: '#787b7c',
                textDown: '下拉更多',
                textUp: '松开刷新',
                showTime: false
            }, function (ret, err) {
                getData(1);
                currentPage = 1;
            });
            //滚动到底部
            api.addEventListener({
                name: 'scrolltobottom'
            }, function (ret, err) {
                if (currentPage < Math.ceil(total / pageSize)) {
                    currentPage++;
                    getData(currentPage);
                } else {
                    api.toast({
                        msg: '无更多数据!'
                    });
                }
            });
        };
        function more(link) {
            api.openWin({
                name: link,
                url: link + '.html',
                bgColor: '#000',
                opaque: true,
                reload: true,
                softInputMode: 'resize',
                pageParam: {},
                vScrollBarEnabled: false,
                animation: {
                    type: "push",                //动画类型（详见动画类型常量）
                    subType: "from_right",       //动画子类型（详见动画子类型常量）
                    duration: 300                //动画过渡时间，默认300毫秒
                }
            });
        }
        function to_detail(e, link) {
            var id = $(e).data('id');
            api.openWin({
                name: link,
                url: link + '.html',
                bgColor: '#000',
                opaque: true,
                reload: true,
                softInputMode: 'resize',
                pageParam: {id: id},
                vScrollBarEnabled: false,
                animation: {
                    type: "push",                //动画类型（详见动画类型常量）
                    subType: "from_right",       //动画子类型（详见动画子类型常量）
                    duration: 300                //动画过渡时间，默认300毫秒
                }
            });
        }



                                             