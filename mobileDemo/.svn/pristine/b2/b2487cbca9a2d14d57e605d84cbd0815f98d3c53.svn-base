<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <link rel="stylesheet" type="text/css" href="../css/api.css">
    <link rel="stylesheet" type="text/css" href="../css/common.css">
    <link rel="stylesheet" type="text/css" href="../css/common-component.css">
    <link rel="stylesheet" type="text/css" href="../css/font-icon.css">
    <link rel="stylesheet" type="text/css" href="../css/reset.css">
    <link rel="stylesheet" type="text/css" href="../css/caicui.css">
    <script type="text/javascript" src="../script/api.js"></script>
    <script type="text/javascript" src="../script/zepto.js"></script>
    <link rel="stylesheet" type="text/css" href="../css/z_style.css">
  </head>
  <body>
    <div class="new">
      <div class="newentry">
        <input type="text" placeholder="讨论标题" oninput="upperCase()" onchange="upperCase()" onblur="upperCase()" class="lx_title">
        <textarea placeholder="讨论内容" onblur="upperCase()" onchange="upperCase()" oninput="upperCase()" class="lx_content"></textarea>
      </div>
    </div>
    <div class="backdrop backdrop-set-img none"></div>
    <div onclick="close_edit()" class="backdrop opacity backdrop2 none"></div>
    <ul class="set-photo-video none">
      <li>上传图片</li>
      <li tapmode="" onclick="getPic('camera',1024,768)">拍照</li>
      <li tapmode="" onclick="getPic('album',1024,768)">选择本地图片</li>
    </ul>
    <div class="editor-bar bar3">
      <div class="editor-tool"><i onclick="open_edit('img')" class="icon-picture2"></i><i onclick="open_edit('audio')" class="icon-recording-o"></i><i onclick="open_edit('img')" class="icon-picture"></i>
        <div tapmode onclick="sub(this)" class="btn btn-success">发布</div>
        <div class="switch">
          <p></p><span>私人</span>
        </div>
      </div>
      <div class="newaudio">
        <div id="audio" class="audio audio-progress"><i class="icon-recording"></i>
          <div class="val">0</div><i tapmode url="" onclick="playAudioMe(this)" bg time="34" class="icon-play"></i>
        </div>
        <p class="newaut">按住开始录音</p>
        <p class="newtip">0.0</p>
        <button onclick="resetAudio()">重录</button>
      </div>
      <div class="newimg">
        <p>最多可添加五张图片</p>
        <div class="adchimg">
          <div onclick="open_img()" class="addimg"><i class="icon-plus"></i></div>
        </div>
      </div>
    </div>
    <script type="text/javascript">
      function open_edit(e) {
          if (e == 'audio') {
              $('.newaudio').show();
              $('.newimg').hide();
              circleProgress();
          } else {
              stopAdd();
              $('.newimg').show();
              $('.newaudio').hide();
          }
          $('.backdrop2').show();
      }
      function stopAdd() {
          var _oldimg = $('.checkimg').length;
          if (_oldimg > 4) {
              $('.addimg').hide();
          } else {
              $('.addimg').show();
          }
      }
      function cancelAdd(e) {
          var _s = $(e).attr('close');
          if (_s == 'no') {
              $('.set-photo,.backdrop-set-img').hide();
          }
      }
      function close_edit() {
          $('.newaudio,.newimg,.backdrop2').hide();
      }
      
      var setAudio;
      var audiosrc = 0;
      var lx_path = '', lx_duration, soundPath = '';
      var _t = $('#audio');
      $('body').delegate('#audio', 'touchstart', function (event) {
          window.clearInterval(setAudio);
          event.preventDefault();
          var cirVal = parseInt(_t.find('.val').text());
          var cirW = parseInt(_t.width());
          var cirI = _t.find('circle').eq(1);
          if (!_t.hasClass('end')) {
              _t.addClass('ing');
              setAudio = setInterval(function () {
                  if (cirVal > 1799) {
                      recordEnd();
                  } else {
                      cirVal += 1;
                      var percent = cirVal / 1800, perimeter = Math.PI * 0.9 * cirW;
                      $(cirI).css('stroke-dasharray', perimeter * percent + " " + perimeter * (1 - percent));
                      _t.find('.val').text(cirVal);
                      $('.newtip').text((cirVal * .1).toFixed(1));
                  }
              }, 100);
              api.startRecord({
                  path: 'fs://mp3/' + audiosrc + '.amr'
              });
          }
      });
      $('body').delegate('#audio', 'touchend', function (event) {
          window.clearInterval(setAudio);
          event.preventDefault();
          var cirVal = parseInt(_t.find('.val').text());
          if (cirVal < 30) {
              api.stopRecord();
              api.alert({
                  msg: '录音时间太短'
              });
              window.clearInterval(setAudio);
              resetAudio();
              //      return false;
          } else {
              recordEnd();
          }
      });
      function recordEnd() {
          _t.removeClass('ing').addClass('end');
          window.clearInterval(setAudio);
          api.stopRecord(function (ret, err) {
              if (ret) {
                  lx_path = 'fs://mp3/' + audiosrc + '.amr';
                  lx_duration = ret.duration;
                  $api.setStorage('lx_duration', ret.duration);
                  $('.icon-play').attr('url', lx_path);
                  var headers = {
                      'X-Requested-With': 'XMLHttpRequest'
                  };
                  api.ajax({
                      url: common_url + '/' + 'api/v2.1/commons/fileUpload',
                      method: 'post',
                      headers: headers,
                      timeout: 120,
                      cache: false,
                      data: {
                          values: {
                              'token': $api.getStorage('token'),
                              'mediatime': lx_duration
                          },
                          files: {
                              'file': lx_path
                          }
                      }
                  }, function (ret, err) {
                      api.hideProgress();
                      if (err) {
                          api.toast({
                              msg: err.msg,
                              location: 'middle'
                          });
                          return false;
                      }
                      if (ret && ret.state == 'success') {
                          soundPath = ret.data.path;
                          $api.setStorage('soundPath', soundPath);
                      } else {
                          api.toast({
                              msg: ret.msg,
                              location: 'middle'
                          });
                      }
                  });
              }
          });
      }
      function playAudioMe(item) {
          var _url = $(item).attr('url');
          $(item).addClass('play');
          if (isEmpty($(item).attr('bg'))) {
              api.startPlay({
                  path: _url
              }, function () {
                  $(item).removeClass('play');
              });
              $(item).attr('bg', '1');
          } else {
              $(item).removeClass('play');
              api.stopPlay();
              $(item).attr('bg', '');
          }
      }
      function resetAudio() {
          $('.newtip,.val').text('0.0');
          _t.find('circle').eq(1).css('stroke-dasharray', "1 9999999");
          _t.removeClass('ing end');
      }
      //select-phone
      function open_img() {
          $('.backdrop-set-img,.set-photo-video').show();
      }
      function upload(img) {
          $('.set-photo-video').hide();
          api.showProgress({
              title: '上传中',
              modal: true
          });
          var headers = {
              'X-Requested-With': 'XMLHttpRequest'
          };
          api.ajax({
              url: common_url + '/' + 'api/v2.1/commons/fileUpload',
              method: 'post',
              headers: headers,
              timeout: 120,
              cache: false,
              data: {
                  values: {
                      'token': $api.getStorage('token')
                  },
                  files: {
                      'file': img
                  }
              }
          }, function (ret, err) {
              api.hideProgress();
              if (err) {
                  api.toast({
                      msg: err.msg,
                      location: 'middle'
                  });
                  return false;
              }
              if (ret && ret.state == 'success') {
                  var imgs = ret.data;
                  var url = static_url + imgs.path;
                  var url1 = imgs.path;
                  var str = '<div class="checkimg" data-id="' + url1 + '" style="background-image:url(' + url + ')" ><i class="icon-close"></i></div>';
                  if ($api.getStorage('img')) {
                      ids = $api.getStorage('img');
                      ids += ',' + url1;
                  } else {
                      ids = url1;
                  }
                  $api.setStorage('img', ids);
                  var tupian = [];
                  $('.checkimg').each(function (i) {
                      tupian.push($('.checkimg').eq(i).attr('data-id'));
                  });
                  if (tupian.length == 4) {
                      //api.toast({msg: '图片最多可以上传5张'});
                      $('.addimg').hide();
                      //return;
                  }
                  $('.addimg').after(str);
                  $('.backdrop-set-img').hide();
              } else {
                  api.toast({
                      msg: ret.msg,
                      location: 'middle'
                  });
              }
          });
      }
      function getPic(type, w, h) {
          $('.backdrop2').unbind();
          if (api && api.systemType == '131231312') {
              var imageCrop = api.require('imageCrop');
              switch (type) {
                  case 'camera':
                      imageCrop.takePhoto(function (ret, err) {
                          $('.backdrop2').click(function () {
                              $api.setStorage('sign-photo', 1);
                              //api.closeFrame();
                          });
                          if (err) {
                              $api.setStorage('sign-photo', 1);
                              //api.closeFrame();
                              return false;
                          }
                          if (ret && ret.imgPath) {
                              if (!in_array(getFixName(ret.imgPath), allowPicTtype)) {
                                  api.toast({
                                      msg: '无法上传此种格式的图片',
                                      location: 'middle'
                                  });
                                  return false;
                              }
                              imageCrop.clipPhoto({
                                  "imgPath": ret.imgPath,
                                  "height": h,
                                  "width": w
                              }, function (ret1, err1) {
                                  if (err1) {
                                      api.toast({
                                          msg: err1.msg,
                                          location: 'middle'
                                      });
                                      $api.setStorage('sign-photo', 1);
                                      //api.closeFrame();
                                      return false;
                                  }
                                  $('body').bind('click', function () {
                                      $api.setStorage('sign-photo', 1);
                                      //api.closeFrame();
                                  });
                                  if (ret1 && ret1.imgPath) {
                                      upload(ret1.imgPath);
                                  }
                              });
                          }
                      });
                      break;
                  case 'album':
                      imageCrop.getPhoto(function (ret, err) {
                          $('.backdrop2').click(function () {
                              $api.setStorage('sign-photo', 1);
                          });
                          if (err) {
                              return false;
                          }
                          if (ret && ret.imgPath) {
                              if (!in_array(getFixName(ret.imgPath), allowPicTtype)) {
                                  api.toast({
                                      msg: '无法上传此种格式的图片',
                                      location: 'middle'
                                  });
                                  return false;
                              }
                              imageCrop.clipPhoto({
                                  "imgPath": ret.imgPath,
                                  "height": h,
                                  "width": w
                              }, function (ret1, err1) {
                                  if (err1) {
                                      api.toast({
                                          msg: err1.msg,
                                          location: 'middle'
                                      });
                                      return false;
                                  }
                                  if (ret1 && ret1.imgPath) {
                                      upload(ret1.imgPath);
                                  }
                              });
                          }
                      });
                      break;
                  default:
                      break;
              }
          } else {
              api.getPicture({
                  sourceType: type,
                  encodingType: 'jpg',
                  destinationType: 'url',
                  targetWidth: w,
                  targetHeight: h,
                  allowEdit: false
              }, function (ret, err) {
                  $('.backdrop2').click(function () {
                      $api.setStorage('sign-photo', 1);
                  });
                  if (err) {
                      $api.setStorage('sign-photo', 1);
                      return false;
                  }
                  if (ret && ret.data) {
                      if (!in_array(getFixName(ret.data), allowPicTtype)) {
                          api.toast({
                              msg: '无法上传此种格式的图片',
                              location: 'middle'
                          });
                          return false;
                      }
                      upload(ret.data);
                  }
              });
          }
      }
      $('.newimg').delegate('.icon-close', 'click', function () {
          var id = '';
          $(this).parent().remove();
          $('.addimg').show();
          $('.checkimg').each(function (i) {
              id += $('.checkimg').eq(i).attr('data-id') + ',';
          });
          var aa = id.substring(0, id.length - 1);
          $api.setStorage('img', aa);
      });
      //志朋有时间把开关滑块这块代码优化一下---杨澍15-12-05
      $('.switch').attr('num', '1');
      $api.setStorage('isPublic', '1');
      $('.switch').on('touchend', function () {
          if ($('.switch').attr('class') == 'switch switch2') {
              $('.switch').attr('num', '1');
              $api.setStorage('isPublic', '1');
              $('.switch').removeClass('switch2');
              $('.switch p').removeClass('switchp1');
              $('.switch span').removeClass('switchpsp');
              $('.switch span').html('私人');
          } else {
              $('.switch').attr('num', '0');
              $api.setStorage('isPublic', '0');
              $('.switch').addClass('switch2');
              $('.switch p').addClass('switchp1');
              $('.switch span').addClass('switchpsp');
              $('.switch span').html('公开');
          }
      });
    </script>
    <script type="text/javascript" src="../script/comm.js"></script>
    <script type="text/javascript" src="../script/doT.min.js"></script>
    <script type="text/javascript" src="../script/caicui.js"></script>
    <script type="text/javascript" src="../script/db.js"></script>
    <script type="text/javascript" src="../script/saveTasksProgress.js"></script>
    <script src="../script/fx.js" type="text/javascript" charset="utf-8"></script>
    <script type="text/javascript">
      function upperCase() {
          var content = $('.lx_content').val();
          var title = $('.lx_title').val();
          if (!isEmpty(content)) {
              $api.setStorage('content', content);
          }
          if (!isEmpty(title)) {
              $api.setStorage('title', title);
          }
      }
      var is_define = true;
      function editor_talk() {
          if (is_define == true) {
              var title = $('.lx_title').val();
              var content = $('textarea').val();
              //var title = isEmpty($api.getStorage('title')) ? '' : $api.getStorage('title');
              //var content = isEmpty($api.getStorage('content')) ? '' : $api.getStorage('content');
              var chang = '';
              $('.checkimg').each(function (i) {
                  chang += $('.checkimg').eq(i).attr('data-id') + ',';
              });
              var aa = chang.substring(0, chang.length - 1);
              if (lx_duration == '' || lx_duration == 0 || lx_duration == undefined) {
                  lx_duration = lx_lens;
              }
              if (soundPath == '' || soundPath == 0 || soundPath == undefined) {
                  soundPath = lx_soundPath;
              }
              var systype = api.systemType;
              var appType;
              if (systype == 'ios') {
                  appType = 'iphone';
              } else if (systype == 'android') {
                  appType = 'aphone';
              }
      
              if (title == '') {
                  is_define = true;
                  api.toast({msg: '标题不能为空', location: 'moddle'});
                  return false;
              }
              if (content == '') {
                  is_define = true;
                  api.toast({msg: '内容不能为空', location: 'middle'});
                  return false;
              }
              if (content.length < 10) {
                  api.toast({msg: '内容不能小于10个字', location: 'middle'});
                  is_define = true;
                  return false;
              }
              if (api.pageParam.id == '') {
                  is_define = true;
                  api.toast({msg: 'id不能为空', location: 'middle'});
                  return false;
              }
              if (api.pageParam.subjectId == '') {
                  is_define = true;
                  api.toast({msg: '科目id不能为空', location: 'middle'});
                  return false;
              }
              if (api.pageParam.categoryId == '') {
                  is_define = true;
                  api.toast({msg: '证书id不能为空', location: 'middle'});
                  return false;
              }
              if (api.pageParam.chapterId == '') {
                  is_define = true;
                  api.toast({msg: '章节id不能为空', location: 'middle'});
                  return false;
              }
              var param = {
                  token: $api.getStorage('token'),
                  content: $.trim(content),//(必)
                  title: $.trim(title),
                  imgPath: isEmpty(aa) ? '' : aa,//(必)
                  subjectId: api.pageParam.subjectId, //科目id(必)
                  clientType: appType,// 客户端类型(必)
                  id: api.pageParam.id,//笔记id，如果为空，则为添加，否则为修改
                  categoryId: api.pageParam.categoryId,//讨论证书(必)
                  soundLen: isEmpty(lx_duration) ? '' : lx_duration,//(必)
                  chapterId: api.pageParam.chapterId,//章节id
                  taskId: api.pageParam.taskId,
                  taskProgress: api.pageParam.taskProgress,
                  taskType: api.pageParam.taskType,
                  soundPath: isEmpty(soundPath) ? '' : soundPath,
                  courseId: api.pageParam.courseId
              };
              api.showProgress({
                  title: '处理中',
                  modal: true
              });
              ajaxRequest('api/studytools/discusssave/v2.1', 'post', param, function (ret, err) {//003.303.1  修改讨论
                  api.hideProgress();
                  if (err) {
                      api.toast({
                          msg: err.msg,
                          location: 'middle'
                      });
                      return false;
                  }
                  if (ret && ret.state == 'success') {
                      api.sendEvent({
                          name: 'talk_detail_f_lx'
                      });
                      $api.rmStorage('content');
                      $api.rmStorage('title');
                      $('.checkimg').hide();
                      $('.newaudio').hide();
                      api.closeWin({name: 'editor-talk'});
                  }
              });
          }
      }
      var lx_lens = 0;
      var lx_soundPath = '';
      apiready = function () {
          $('.editor-bar').removeClass('bar3').addClass('bar4');
          talk();
          /*
           api.addEventListener({
           name : 'editor-talk'
           },function(){
           if(is_define == true){
           var title=isEmpty($api.getStorage('title')) ? '' : $api.getStorage('title'),content=isEmpty($api.getStorage('content')) ? '' : $api.getStorage('content');
           var chang = '';
           $('.checkimg').each(function (i) {
           chang += $('.checkimg').eq(i).attr('data-id') + ',';
           });
           var aa = chang.substring(0, chang.length - 1);
           if (lx_duration == '' || lx_duration == 0 || lx_duration == undefined) {
           lx_duration = lx_lens;
           }
           if (soundPath == '' || soundPath == 0 || soundPath == undefined) {
           soundPath = lx_soundPath;
           }
           var systype = api.systemType;
           var appType;
           if (systype == 'ios') {
           appType = 'iphone';
           } else if (systype == 'android') {
           appType = 'aphone';
           }
           if (title == '') {
           is_define = true;
           api.toast({msg: '标题不能为空', location: 'moddle'});
           return false;
           }
           if (content == '') {
           is_define = true;
           api.toast({msg: '内容不能为空', location: 'middle'});
           return false;
           }
           if(content.length < 10){
           api.toast({msg:'内容不能小于10个字',location:'middle'});
           is_define = true;
           return false;
           }
           if (api.pageParam.id == '') {
           is_define = true;
           api.toast({msg: 'id不能为空', location: 'middle'});
           return false;
           }
           if (api.pageParam.subjectId == '') {
           is_define = true;
           api.toast({msg: '科目id不能为空', location: 'middle'});
           return false;
           }
           if (api.pageParam.categoryId == '') {
           is_define = true;
           api.toast({msg: '证书id不能为空', location: 'middle'});
           return false;
           }
           if (api.pageParam.chapterId == '') {
           is_define = true;
           api.toast({msg: '章节id不能为空', location: 'middle'});
           return false;
           }
           var param = {
           token: $api.getStorage('token'),
           content: content,//(必)
           title: title,
           imgPath: isEmpty(aa) ? '' : aa,//(必)
           subjectId: api.pageParam.subjectId, //科目id(必)
           clientType: appType,// 客户端类型(必)
           id: api.pageParam.id,//笔记id，如果为空，则为添加，否则为修改
           categoryId: api.pageParam.categoryId,//讨论证书(必)
           soundLen: isEmpty(lx_duration) ? '' : lx_duration,//(必)
           chapterId: api.pageParam.chapterId,//章节id
           taskId: api.pageParam.taskId,
           taskProgress: api.pageParam.taskProgress,
           taskType: api.pageParam.taskType,
           soundPath: isEmpty(soundPath) ? '' : soundPath
           };
           api.showProgress({
           title: '处理中',
           modal: false
           });
           ajaxRequest('api/studytools/discusssave/v2.1', 'post', param, function (ret, err) {//003.303.1  修改讨论
           api.hideProgress();
           if (err) {
           api.toast({
           msg: err.msg,
           location: 'middle'
           });
           return false;
           }
           if (ret && ret.state == 'success') {
           api.sendEvent({
           name: 'talk_detail_f_lx'
           });
           $api.rmStorage('content');
           $api.rmStorage('title');
           $('.checkimg').hide();
           $('.newaudio').hide();
           api.closeWin({name: 'editor-talk'});
           }
           });
           }
           });
           */
      };
      function talk() {
          var param = {};
          param.id = api.pageParam.id;
          param.pageNo = 1;
          param.pageSize = 10;
          param.token = $api.getStorage('token');
          ajaxRequest('api/studytools/discussdetail/v2.1', 'get', param, function (ret, err) {//003.301.1  讨论详情(修改讨论详情显示内容)
              if (err) {
                  api.toast({
                      msg: err.msg,
                      location: 'middle'
                  });
                  return false;
              }
              if (ret && ret.state == 'success') {
                  var memberId = get_loc_val('mine', 'memberId');
                  if (api.pageParam.memberId == memberId) {
                      /*api.sendEvent({
                       name: 'notes_bj_lx',
                       extra: {key1: ret.data.imgPath,soundPath:ret.data.soundPath,soundlen:ret.data.soundlen}
                       });*/
                      $('.lx_title').val(ret.data.title);
                      $('textarea').val(ret.data.content);
                      if (!isEmpty(ret.data.imgPath)) {
                          var imgPath = ret.data.imgPath.split(',');
                          var str = '';
                          $.each(imgPath, function (i, item) {
                              var url = static_url + item;
                              str += '<div class="checkimg" data-id="' + item + '" style="background-image:url(' + url + ')" ><i class="icon-close"></i></div>';
                          });
                          $('.addimg').after(str);
                      }
                      lx_lens = ret.data.soundlen;
                      lx_soundPath = ret.data.soundPath;
                      if (lx_lens == 0 || lx_lens == '' || lx_soundPath == '') {
                      } else {
                          $('.newaudio').append('<div class="voice-player" tapmode, url="' + static_url + ret.data.soundPath + '", onclick="playAudio(this)", bg, time="' + ret.data.soundlen + '" style="display: block;"></div>');
                          audioDom();
                      }
                  }
              } else {
                  /*api.toast({
                   msg : ret.msg,
                   location : 'middle'
                   });*/
              }
          });
      }
    </script>
  </body>
</html>