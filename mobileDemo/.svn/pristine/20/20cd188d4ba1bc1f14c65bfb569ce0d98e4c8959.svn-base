<!DOCTYPE html>
<html class="bg-white">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <link rel="stylesheet" type="text/css" href="../css/api.css">
    <link rel="stylesheet" type="text/css" href="../css/common.css">
    <link rel="stylesheet" type="text/css" href="../css/common-component.css">
    <link rel="stylesheet" type="text/css" href="../css/font-icon.css">
    <link rel="stylesheet" type="text/css" href="../css/reset.css">
    <link rel="stylesheet" type="text/css" href="../css/caicui.css">
    <script type="text/javascript" src="../script/api.js"></script>
    <script type="text/javascript" src="../script/zepto.js"></script>
  </head>
  <body>
    <div class="pags">
      <div id="header" class="header">
        <div tapmode onclick="my_close()" class="left back"><i class="icon-back"></i></div>
        <div class="left-next">发起问题</div>
        <div class="right"><span onclick="saveQuestion();" tapmode class="delete">发布</span></div>
      </div>
      <div class="editor-title">
        <div class="left"><i class="icon-play-o"></i><span id="playTime">12:38</span></div>
        <div class="right">最多输入150字</div>
      </div>
      <div class="editor-tit">
        <input id="note_title" type="text" maxlength="100" placeholder="输入标题">
      </div>
      <div tapmode onclick="showEdit()" class="editor-cont">输入正文</div>
      <div id="editor" style="opacity:.001" class="editor-bar">
        <div class="editor-tool"><i class="icon-recording-o needaideo"></i><i class="icon-picture needimg"></i>
          <div class="textarea"></div>
          <div class="btn btn-success">发布</div>
        </div>
      </div>
    </div>
    <div class="editor-warp none">
      <textarea id="note_content" rows="" cols="" maxlength="150" placeholder="输入正文"></textarea>
      <div tapmode onclick="hideEdit()" class="btn">完成</div>
    </div>
    <script type="text/javascript" src="../script/comm.js"></script>
    <script type="text/javascript" src="../script/doT.min.js"></script>
    <script type="text/javascript" src="../script/caicui.js"></script>
    <script type="text/javascript" src="../script/db.js"></script>
    <script type="text/javascript" src="../script/saveTasksProgress.js"></script>
    <script type="text/javascript">
      function showEdit() {
          $('.pags').hide();
          $('.editor-warp').show();
          $('#note_content').focus();
          api.setFrameAttr({
              name: 'footer-editor',
              hidden: true
          });
      }
      
      function hideEdit() {
          $('.pags').show();
          $('.editor-warp').hide();
          $('.editor-cont').text($('#note_content').val());
          api.setFrameAttr({
              name: 'footer-editor',
              hidden: false
          });
      }
      
      
      function my_close() {
          if (api.systemType == 'android') {
              api.setFullScreen({
                  fullScreen: true
              });
          }
          api.closeWin();
      }
      document.documentElement.style.fontSize = 100 * (document.documentElement.clientWidth / 1280) + 'px';
      apiready = function () {
          if (api.systemType == 'android') {
              /*(api.setFullScreen({
               fullScreen: false
               });*/
          }
          api.addEventListener({
              name: 'keyback'
          }, function (ret, err) {
              my_close();
          });
          api.setScreenOrientation({
              orientation: 'landscape_right'
          });
      
          var param = api.pageParam;
          var bar_h = $('#editor').height();
      
          api.openFrame({
              name: 'footer-editor',
              url: 'footer-editor.html',
              bounces: false,
              scaleEnabled: false,
              rect: {
                  x: 0,
                  y: winW - bar_h,
                  w: api.winWidth,
                  h: bar_h
              },
              pageParam: param
          });
          window.localStorage.editorType = 'bar5';
      
      
          //监听发布新问题事件
          api.addEventListener({
              name: 'createQuestions'
          }, function (ret) {
              if (ret && ret.value) {
                  isPublic = ret.value.isPublic;
                  var uploadimage = ret.value.img;//用户上传的图片
                  var soundPath = ret.value.soundPath;//用户上传的录音
                  var soundLen = ret.value.lx_duration;//用户上传的录音时长
                  createquestion(uploadimage, soundPath, soundLen);
              }
          });                                              //获取参数
          course_detail = api.pageParam.course_detail;//课程详情
          task_info = api.pageParam.task_info;//任务详情
          progress = api.pageParam.progress;//任务进度
          task_info_detail = api.pageParam.task_info_detail;//任务进度
          //study_progress = api.pageParam.study_progress;//任务进度
      
          //getChapterInfo();
      
          if (task_info.taskType == 'exam') {
              $('#playTime').html('第' + progress + '题');
          } else if (task_info.taskType == 'video') {
      
              $('#playTime').html(formatSec(progress));
          } else {
              $('#playTime').html('第' + progress + '页');
          }
      };
      
      //右上角的发布笔记
      function saveQuestion() {
          var jsfun = 'create_bottom_question();';
          api.execScript({
              name: 'create-question',
              frameName: 'footer-editor',
              script: jsfun
          });
      }
      
      //定义变量
      var course_detail;//课程详情
      var task_info;//任务详情
      var isPublic = false;//true笔记公开，false不公开
      var progress;
      //var chapter_info;//当前章节信息
      var chapterName = '';//章节标题
      //var study_progress;//当前的进度
      var task_info_detail;
      
      function create_question(data) {
          var ret = JSON.parse(data);
          isPublic = ret.isPublic;
          var uploadimage = ret.img;//用户上传的图片
          var soundPath = ret.soundPath;//用户上传的录音
          var soundLen = ret.lx_duration;//用户上传的录音时长
          createquestion(uploadimage, soundPath, soundLen);
      }
      var is_click = true;
      function createquestion(imgPath, soundPath, soundLen) {
          if (is_click == true) {
              var title = $.trim($('#note_title').val());
              var content = $.trim($('#note_content').val());
              if (title != '' && content != '') {
                  var systype = api.systemType;
                  var appType;
                  if (systype == 'ios') {
                      appType = 'iphone';
                  } else if (systype == 'android') {
                      appType = 'aphone';
                  }
                  var param = {};
                  param.token = $api.getStorage('token'); //必须
                  param.content = content; //笔记内容，必须
                  param.imgPath = imgPath;//图片数组，图片路径（以’，’分隔）,非必须
                  param.soundPath = soundPath;//声音文件单一,非必须
                  param.courseId = course_detail.courseId;//课程id，必须
                  param.taskId = task_info.taskId;//任务id,非必须
                  param.taskProgress = progress;//任务进度,非必须,int,非必须
                  param.taskType = task_info.taskType;//非必须，任务类型: 任务类型有视频(video)、测试题(exam)、文档(doc) 、词汇(vocabulary)
                  param.clientType = appType;//客户端类型：iphone,必须
                  param.id = '';//提问问题id，如果为空，则为添加，否则为修改
                  param.title = title;//必须，笔记标题
                  //param.isPublic = isPublic;//必须，bool: true笔记公开，false不公开
                  param.subjectId = course_detail.subjectId;//必须，科目id
                  param.categoryId = course_detail.categoryId;//必须，string:证书id
                  param.chapterId = task_info_detail.chapterId;//必须，string:章节id
                  param.soundLen = soundLen;//string:声音文件的时长，如果有声音文件，此字段必传
                  param.subjectName = course_detail.subjectName;//必须，科目名称
                  param.categoryName = course_detail.categoryName;//必须，证书名称
                  param.courseName = course_detail.courseName;//必须，课程名称
                  param.chapterName = task_info_detail.chapterName;//必须，章节名称
                  param.task = task_info.title;//必须，任务名称
      
                  if (param.content.length < 10) {
                      is_click = true;
                      api.toast({msg: '内容不能少于10个字'});
                      return false;
                  }
                  api.showProgress({
                      title: '发布中',
                      modal: true
                  });
                  ajaxRequest('api/studytools/questionsave/v2.1', 'post', param, function (ret, err) {//003.116.1  发布或修改笔记
                      is_click = false;
                      api.hideProgress();
                      if (err) {
                          is_click = true;
                          api.toast({
                              msg: err.msg,
                              location: 'middle'
                          });
                          return false;
                      }
                      if (ret && ret.state == 'success') {
                          //api.alert({msg: ret.data.id});
                          api.sendEvent({
                              name: 'create-question-f'
                          });
                          api.alert({
                              title: '温馨提示',
                              msg: '发布成功',
                              buttons: ['返回']
                          }, function (ret, err) {
                              if (ret.buttonIndex == 1) {
                                  api.closeWin();//关闭页面
                              }
                          });
                      } else {
                          is_click = true;
                      }
                  });
              } else {
                  api.toast({
                      msg: '请填写标题和正文',
                      location: 'middle'
                  });
              }
          }
      }
    </script>
  </body>
</html>