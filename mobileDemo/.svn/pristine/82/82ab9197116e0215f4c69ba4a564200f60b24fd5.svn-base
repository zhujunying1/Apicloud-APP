<!DOCTYPE html>
<html class="transparent video-menu">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <link rel="stylesheet" type="text/css" href="../css/api.css">
    <link rel="stylesheet" type="text/css" href="../css/common.css">
    <link rel="stylesheet" type="text/css" href="../css/common-component.css">
    <link rel="stylesheet" type="text/css" href="../css/font-icon.css">
    <link rel="stylesheet" type="text/css" href="../css/reset.css">
    <link rel="stylesheet" type="text/css" href="../css/caicui.css">
    <script type="text/javascript" src="../script/api.js"></script>
    <script type="text/javascript" src="../script/zepto.js"></script>
    <link rel="stylesheet" href="../css/about-video.css">
    <style type="text/css">
        .header{background: none;border-bottom: 1px solid #9b999a;}
        .header .left:after{display: none;}
        .header .left-next{padding-left: 1.2rem;}

        .chapter-task ul{margin-top:0; }
        .chapter-task li .v-name span:nth-child(1) {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            width: 3.2rem;
        }
        .chapter-task li .v-name span:nth-child(2) {
          position: absolute;
          right: 0;
          top: -0.2rem;
          color: #fff;
          font-size: .3rem;
      }
        .chapter-task .video-catego>span {
          background: url(../image/tv.png) no-repeat;
          background-size: 100% 100%;
        }
        .chapter-task li>span {
            height: 0.54rem;
            width: 0.64rem;
        }
        .chapter-task li .v-progress {
            width: 82%;
            background-color: #00493a;
        }
        .about-video-content ul li {
            border-bottom: 1px solid #2b292a;
        }
        .about-video-content ul li:last-child {
            border-bottom: 1px solid #2b292a;
        }
        .down-progress {
            color: #00a186;
            position: absolute;
            right: 0.2rem;
            line-height: .7rem;
        }
        .chapter-task li>div {
            left: 13%;
        }
        .video-body{
            top: 1rem;
        }
        .about-video-content{
          margin-top: 0;
        }
        .taskList{width: 100%;}
        .taskList dt, .taskList dd {
            /*display: table-cell;*/
            height: 1rem;
            /*padding: 0 0 0 0.2rem;*/
        }
        .taskList dt {
            width: 85%;
            float: left;
        }
        .taskList dd{
          float: right;
          width: 15%;
        }
        .chapter-task li p:nth-child(1) {
            width: 80%;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        .chapter-task .video-catego>span{
			background: url(../image/video2.png) no-repeat;
		    background-size: 100% 100%;
		    width: 0.50rem;
		    height: 0.45rem;
		    position: absolute;
		    top: 0.35rem;
        }
        .chapter-task .note-catego>span{
        	background: url(../image/task2.png) no-repeat;
    		background-size: 100% 100%;
    		width: 0.45rem;
		    height: 0.45rem;
		    top: 0.35rem;
        }
        .taskVideo{
			display: inline-block;
		    background: url(../image/video.png) no-repeat;
		    background-size: 100% 100%;
		    width: 0.70rem;
			height: 0.55rem;
		  
		}
		.taskExam{
	      display: inline-block;
	        background: url(../image/task.png) no-repeat;
	        background-size: 100% 100%;
	        width: 0.30rem;
	        height: 0.35rem;
	        
	    }
	    .left .notebook{
	    	display: inline-block;
		    background: url(../image/notebook.png) no-repeat;
		    background-size: 100% 100%;
		    width: 0.50rem;
		    height: 0.52rem;
		    position: absolute;
		    bottom: 0.2rem;
	    }
        @font-face {
          font-family: 'icomoon';
          src: url("../fonts/icomoon2.ttf");
          font-weight: normal;
          font-style: normal;
        }
        .down-progress i{
			font-size: 0.4rem;
		}
        .down-progress[status='ing'] i:before,
		.down-progress .ing i:before,
		.down-progress[type='1'] i:before {
		  content: '\e972';
		  font-size: 0.25rem;
		}
		.down-progress[status='wait'] i:before,
		.down-progress.wait i:before,
		.down-progress[type='2'] i:before,
		 .down-progress[type='5'] i:before {
		  content: '\e973';
		  font-size: 0.4rem;
		}
		.header{
			color:#fff;
		}
		.header .left-next{
			float: left;
			text-align:left;
			font-size:0.3rem;
		}
    </style>
  </head>
  <body>

      <div onclick="closeThis()" tapmode class="backdrop"></div>
    <div style="opacity:.0001; position: absolute; top: 50%;z-index:-1">
      <div id="svgDown" class="down-progress"></div>
    </div>
    <div class="about-video">
      <div class="header">
        <div class="left"><span class="notebook"></span></div>
        <div class="left-next">本章任务</div>
      </div>
      <div class="video-body">
        <!-- 章节任务-->
         <div id="chaTask" class="about-video-content chapter-task"></div>
      </div>
    </div>
   
   
    <!--本章任务-->
    <script id="task_tpl" type="text/x-dot-template">
    <ul>{{~it.chapters:val:key}}
      {{ if(val.isLeaf=='false'){ }}
          {{~val.children:val2:key2}}
          {{ if(val2.isLeaf=='false'){ }}
          {{~val2.children:val3:key3}}
            {{~val3.tasks:val4:key4}}
            {{ if(val4.taskType=='video'){ }}
            <li class="video-catego" style="display: none;"><span class="taskVideo"></span>
	            <div>
	              <dl class="taskList" style="display: table;">
	                <dt onclick="task_event(this,'{{=key4}}','{{=val4.taskId}}','{{=val3.chapterId}}')" tapmode >
	                  <p style="color:#fff;overflow: hidden;text-overflow: ellipsis;white-space: nowrap;width:5.5rem;">{{=val4.title}}</p>
	                  <p class="v-name"><span class="span11"></span><span></span></p>
	                  <p class="v-progress"><span style="font-size: 0;" data-taskid="{{=val.taskId}}" class="taskProgress"></span></p>
	                </dt>
	                <dd>
        
                      <div id="{{=val3.chapterId}}" courseid="{{=it.courseId}}" chapterida="{{=val.chapterId}}" chapteridb="{{=val2.chapterId}}" chapteridc="{{=val3.chapterId}}" chapterNamea="{{=val.chapterTitle}}" chapterNameb="{{=val2.chapterTitle}}" chapterNamec="{{=val3.chapterTitle}}" courseName="{{=it.courseName}}" versionid="{{=it.versionId}}" type="3" onclick="down(this)" class="down-progress task{{=val4.videoCcid}}"><i class="icon-down1"></i>
	                    <div class="val"></div>
	                  </div>
                  	  <div class="down_data none">{{=JSON.stringify(val4)}}</div>
                    </dd>
	              </dl>
	            </div>   
            </li>{{ }else if(val4.taskType=='exam'){ }}
            <li class="note-catego" style="display: none;" id="{{=val4.taskId}}"><span class="taskExam"></span>
	          <div>
	            <dl class="taskList task{{=val4.taskId}}" style="display: table;">
	                <dt onclick="task_event(this,'{{=key4}}','{{=val4.taskId}}','{{=val3.chapterId}}')" tapmode >
	                  <p style="color:#fff;overflow: hidden;text-overflow: ellipsis;white-space: nowrap;width:5.5rem;line-height: 0.7rem;">{{=val4.title}}</p>
	                  <!--<p class="v-name"><span class="span11"></span><span>0%</span></p>-->
	                  <!--<p class="v-progress"><span style="font-size: 0;" data-taskid="{{=val.taskId}}" class="taskProgress"></span></p>-->
	                </dt>
	                <dd>
               
                      <div id="{{=val3.chapterId}}" class="down-progress task{{=val4.videoCcid}}">
	                    <span>{{=val4.totalCount}}题</span>
	                  </div>
                  	  <div class="down_data none">{{=JSON.stringify(val4)}}</div>
                    </dd>
	              </dl>
	          </div>
	        </li>
            {{ } }}
            {{~}}
            {{~}}

          {{ }else{ }}
            {{~val2.tasks:val4:key4}}
            {{ if(val4.taskType=='video'){ }}
            <li class="video-catego" style="display: none;"><span class="taskVideo"></span>
	            <div>
	              <dl class="taskList" style="display: table;">
	                <dt onclick="task_event(this,'{{=key4}}','{{=val4.taskId}}','{{=val2.chapterId}}')" tapmode >
	                  <p style="color:#fff;overflow: hidden;text-overflow: ellipsis;white-space: nowrap;width:5.5rem;">{{=val4.title}}</p>
	                  <p class="v-name"><span class="span11"></span><span></span></p>
	                  <p class="v-progress"><span style="font-size: 0;" data-taskid="{{=val.taskId}}" class="taskProgress"></span></p>
	                </dt>
	                <dd>
    
                      <div id="{{=val2.chapterId}}" courseid="{{=it.courseId}}" chapterida="{{=val.chapterId}}" chapteridb="{{=val2.chapterId}}" chapteridc="" chapterNamea="{{=val.chapterTitle}}" chapterNameb="{{=val2.chapterTitle}}" chapterNamec="" courseName="{{=it.courseName}}" versionid="{{=it.versionId}}" type="3" onclick="down(this)" class="down-progress task{{=val4.videoCcid}}"><i class="icon-down1"></i>
	                    <div class="val"></div>
	                  </div>
                  	  <div class="down_data none">{{=JSON.stringify(val4)}}</div>
                    </dd>
	              </dl>
	            </div>   
            </li>{{ }else if(val4.taskType=='exam'){ }}
            <li class="note-catego" style="display: none;" id="{{=val4.taskId}}"><span class="taskExam"></span>
	          <div>
	            <dl class="taskList task{{=val4.taskId}}" style="display: table;">
	                <dt onclick="task_event(this,'{{=key4}}','{{=val4.taskId}}','{{=val2.chapterId}}')" tapmode >
	                  <p style="color:#fff;overflow: hidden;text-overflow: ellipsis;white-space: nowrap;width:5.5rem;line-height: 0.7rem;">{{=val4.title}}</p>
	                  <!--<p class="v-name"><span class="span11"></span><span>0%</span></p>-->
	                  <!--<p class="v-progress"><span style="font-size: 0;" data-taskid="{{=val.taskId}}" class="taskProgress"></span></p>-->
	                </dt>
	                <dd>
 
                      <div id="{{=val2.chapterId}}" class="down-progress task{{=val4.videoCcid}}">
	                    <span>{{=val4.totalCount}}题</span>
	                  </div>
                  	  <div class="down_data none">{{=JSON.stringify(val4)}}</div>
                    </dd>
	              </dl>
	          </div>
	        </li>
            {{ } }}
            {{~}}
          {{ } }}
          {{~}}
        </li>
      {{ }else{ }}
        {{~val.tasks:val4:key4}}
            {{ if(val4.taskType=='video'){ }}
            <li class="video-catego" style="display: none;"><span class="taskVideo"></span>
            <div>
                  <dl class="taskList">
                    <dt tapmode  onclick="task_event(this,'{{=key4}}','{{=val4.taskId}}','{{=val.chapterId}}')">
                      <p style="color:#fff;overflow: hidden;text-overflow: ellipsis;white-space: nowrap;width:5.5rem;">{{=val4.title}}</p>
                      <p class="v-name"><span class="span11"></span><span></span></p>
                      <p class="v-progress"><span style="font-size: 0;" data-taskid="{{=val.taskId}}" class="taskProgress"></span></p>
                    </dt>
                    <dd>
                      
                      <div id="{{=val.chapterId}}" courseid="{{=it.courseId}}" chapterida="{{=val.chapterId}}" chapteridb="" chapteridc="" chapterNamea="{{=val.chapterTitle}}" chapterNameb="" chapterNamec="" courseName="{{=it.courseName}}" versionid="{{=it.versionId}}" type="3" onclick="down(this)" class="down-progress task{{=val4.videoCcid}}"><i class="icon-down1"></i>
                    <div class="val"></div>
                  </div>
                  <div class="down_data none">{{=JSON.stringify(val4)}}</div>
                    </dd>
                  </dl>
                </div>       
            </li>{{ }else if(val4.taskType=='exam'){ }}
            <li class="note-catego" style="display: none;"><span class="taskExam"></span>
	          <div>
	            <dl class="taskList task{{=val4.taskId}}" style="display: table;">
	                <dt onclick="task_event(this,'{{=key4}}','{{=val4.taskId}}','{{=val.chapterId}}')" tapmode >
	                  <p style="color:#fff;overflow: hidden;text-overflow: ellipsis;white-space: nowrap;width:5.5rem;line-height: 0.7rem;">{{=val4.title}}</p>
	                  <!--<p class="v-name"><span class="span11"></span><span>0%</span></p>-->
	                  <!--<p class="v-progress"><span style="font-size: 0;" data-taskid="{{=val.taskId}}" class="taskProgress"></span></p>-->
	                </dt>
	                <dd>
 
                      <div id="{{=val.chapterId}}" class="down-progress task{{=val4.videoCcid}}">
	                    <span>{{=val4.totalCount}}题</span>
	                  </div>
                  	  <div class="down_data none">{{=JSON.stringify(val4)}}</div>
                    </dd>
	              </dl>
	          </div>
	        </li>
            {{ } }}
            {{~}}
      {{ } }}
      {{~}}</ul>

    </script>
    <script type="text/javascript" src="../script/jquery.min.js"></script>
    <script type="text/javascript">
      function next(leave, num1, num2, num3, obj, cid) {
          if (pageName == 'catalog') {
              var courseId = api.pageParam.course_id;
              //如果没有缓存信息，就从接口获取
              var tmp_course_detail = $api.getStorage(courseId);
              if (isEmpty(tmp_course_detail)) {
                  //获取课程的详细信息
                  //api/v2.1/course/courseDetail，接口编号：004-006
                  ajaxRequest('api/v2.1/course/courseDetail', 'get', {
                      courseId: courseId
                  }, function (ret, err) {//004.006获取课程的详细信息
                      if (err) {
                          api.hideProgress();
                          api.toast({
                              msg: err.msg,
                              location: 'middle'
                          });
                          return false;
                      }
                      if (ret && ret.state == 'success') {
                          if (!ret.data) {
                              api.toast({
                                  msg: '暂无任务',
                                  location: 'middle'
                              });
                              return false;
                          }
                          course_detail = ret.data[0];
                          //课程详情数据
                          $api.setStorage(courseId, course_detail);
                          var task_arr2 = save_tasks(course_detail);
                          var task_info_detail2;
                          for (var i in task_arr2) {
                              if (task_arr2[i].chapterId == cid) {
                                  task_info_detail2 = task_arr2[i];
                                  break;
                              }
                          }
                          if (isEmpty(task_info_detail2)) {
                              api.toast({
                                  msg: '暂无任务',
                                  location: 'middle'
                              });
                              return false;
                          }
                          judge_task(task_info_detail2.taskInfo, 0);
                      }
                  });
              } else {
                  course_detail = tmp_course_detail;
                  var task_arr2 = save_tasks(course_detail);
                  var task_info_detail2;
                  for (var i in task_arr2) {
                      if (task_arr2[i].chapterId == cid) {
                          task_info_detail2 = task_arr2[i];
                          break;
                      }
                  }
                  if (isEmpty(task_info_detail2)) {
                      api.toast({
                          msg: '暂无任务',
                          location: 'middle'
                      });
                      return false;
                  }
                  judge_task(task_info_detail2.taskInfo, 0);
              }
          } else {
              //changeCharpter(obj, num1, num2, num3);
              changeCharpter(obj, cid);
          }
      }
      
      //统计每个章节的各种任务个数，参数num1表示一级章节，参数num2表示二级章节
      function countTaskType(num1, num2, num3) {
          return '';
          if (pageName == 'video-menu') {
              return '';
          }
          if (num2 == -1) {
              var tmp_chapters = course_detail.chapters[num1].tasks;
          } else if (num3 == -1) {
              var tmp_chapters = course_detail.chapters[num1].children[num2].tasks;
          } else {
              var tmp_chapters = course_detail.chapters[num1].children[num2].children[num3].tasks;
          }
          //得到子章节的任务信息
          var tmp_num = {
              'video': 0,
              'exam': 0,
              'doc': 0,
              'entry': 0
          };
          for (var i in tmp_chapters) {
              var tmp_tasks = tmp_chapters[i];
              if (tmp_tasks.taskType == 'video') {
                  tmp_num.video++;
              } else if (tmp_tasks.taskType == 'exam') {
                  tmp_num.exam++;
              } else if (tmp_tasks.taskType == 'pdfread') {
                  tmp_num.doc++;
              } else if (tmp_tasks.taskType == 'entry') {
                  tmp_num.entry++;
              }
          }
          var tmp_html = '';
          if (tmp_num.video > 0) {
              tmp_html += '<li><i class="icon-play"></i> <span class="multiples"> × ' + tmp_num.video + '</span></li>';
          }
          if (tmp_num.exam > 0) {
              tmp_html += '<li><i class="icon-edit2"></i> <span class="multiples"> × ' + tmp_num.exam + '</span></li>';
          }
          if (tmp_num.doc > 0) {
              tmp_html += '<li><i class="icon-word-card"></i> <span class="multiples"> × ' + tmp_num.doc + '</span></li>';
          }
          if (tmp_num.entry > 0) {
              tmp_html += '<li><i class="icon-language"></i> <span class="multiples"> × ' + tmp_num.entry + '</span></li>';
          }
          return tmp_html;
      
      }
      
      //判断是不是当前正在学习的章节
      function isNowChapter(leave, num1, num2, num3, cid) {
          if (pageName == 'catalog') {
              return '';
          }
          if (task_info_detail.chapterId == cid) {
              return 'active';
          } else {
              return '';
          }
      }
      
      //点击章节列表中的子章节，切换到相应的任务
      //function changeCharpter(obj, num1, num2, num3) {
      function changeCharpter(obj, cid) {
          var arr = [];
          for (var i in task_arr) {
              if (task_arr[i].chapterId == cid) {
                  arr.push(task_arr[i]['taskInfo']);
              }
          }
          var task_tpl = $('#task_tpl').html();
          var content = doT.template(task_tpl);
          //$('#chaTask').html(content(chapter_data)).show().siblings().hide();
          $('#chaTask').html(content(arr)).show().siblings().hide();
          isSolidcircle('progress', cid, '', courseId, 'video-menu');
          //四个导航的添加、移除样式
          $('#NavTask').addClass('vList-selected');
          $('#NavTask').siblings().removeClass('vList-selected');
          now_nav_type = 1;
          //改变任务的内容
          is_over_task = false;
          is_over_extend = false;
          is_over_file = false;
          //'getChapterTask();
          return false;
          //}
      }
      
      //判断任务类型，跳转相应的页面
      //function judge_task(res_process) {
      function judge_task(task_info, lastProgress) {
      
          if (isEmpty(course_detail) || isEmpty(course_detail.chapters) || isEmpty(task_info)) {
              api.toast({
                  msg: '获取课程信息失败',
                  location: 'middle'
              });
              return false;
          }
          if (isEmpty(task_info)) {
              api.toast({
                  msg: '暂无任务',
                  location: 'middle'
              });
              return false;
          }
          //判断当前任务类型
          if (task_info.taskType == 'video') {
              //视频类型
              var new_win_name = 'video';
              var new_win_url = 'video.html';
          } else if (task_info.taskType == 'entry' || task_info.taskType == 'pdfread' || task_info.taskType == 'exam') {
              //entry（外链类型）、pdfread（pdf类型）、exam（测试题类型）
              var new_win_name = 'course-test';
              var new_win_url = 'course-test.html';
          } else {
              api.toast({
                  msg: '暂无任务，请稍后再试或联系客服',
                  location: 'middle'
              });
              return false;
          }
          //需要传递的参数
          var pageParams = {
              from: 'course-studying',
              courseId: course_detail.courseId,//课程id
              //study_progress: res_process,//学习进度
              last_progress: lastProgress,//学习进度
              course_detail: course_detail,//课程详情
              task_info: task_info,//当前要学习的任务信息
              type: 'task'
          };
      
      
          api.hideProgress();
          //设置屏幕向右翻转
          api.setScreenOrientation({
              orientation: 'landscape_right'
          });
          //跳转到播放页面
          api.openWin({
              name: new_win_name,
              url: new_win_url,
              delay: 200,
              slidBackEnabled: false,//iOS7.0及以上系统中，禁止通过左右滑动返回上一个页面
              pageParam: pageParams
          });
      }
      
      //判断实心圈、半心圈、空心圈，参数type:'circle'、'progress',参数chap_id二级章节id
      function isSolidcircle(type, chap_id, task_id, course_id, from) {
          if (isEmpty(course_id)) {
              var courseId = api.pageParam.course_id;
          } else {
              var courseId = course_id;
          }
          //如果没有缓存信息，就从接口获取
          var tmp_course_detail = $api.getStorage(courseId);
          if (isEmpty(tmp_course_detail)) {
              //获取课程的详细信息
              //api/v2.1/course/courseDetail，接口编号：004-006
              ajaxRequest('api/v2.1/course/courseDetail', 'get', {
                  courseId: courseId
              }, function (ret, err) {//004.006获取课程的详细信息
                  if (err) {
                      api.hideProgress();
                      api.toast({
                          msg: err.msg,
                          location: 'middle'
                      });
                      return false;
                  }
                  if (ret && ret.state == 'success') {
                      if (!ret.data) {
                          api.toast({
                              msg: '暂无任务',
                              location: 'middle'
                          });
                          return false;
                      }
                      course_detail = ret.data[0];
                      //课程详情数据
                      $api.setStorage(courseId, course_detail);
                      //处理过的课程进度
                      var arr = {};
                      var data_arr = course_detail.chapters;
                      for (var i in data_arr) {
                          if (data_arr[i].isLeaf == 'false') {
                              var child = data_arr[i].children;
                              for (var j in child) {
                                  if (child[j].isLeaf == 'false') {
                                      var child2 = child[j].children;
                                      for (var k in child2) {
                                          var cId = child2[k].chapterId;
                                          arr[cId] = {};
                                          for (var x in child2[k].tasks) {
                                              if (child[j].isLeaf == 'false') {
      
                                              } else {
                                                  var taskid = child2[k].tasks[x].taskId;
                                                  arr[cId][taskid] = {
                                                      'progress': 0,
                                                      'isok': 0,
                                                      'total': 0
                                                  };
                                             }
                                          }
                                      }
                                  } else {
                                      var cId = child[j].chapterId;
                                      arr[cId] = {};
                                      for (var k in child[j].tasks) {
                                          var taskid = child[j].tasks[k].taskId;
                                          arr[cId][taskid] = {
                                              'progress': 0,
                                              'isok': 0,
                                              'total': 0
                                          };
                                      }
                                  }
                              }
                          } else {
                              var cId = data_arr[i].chapterId;
                              arr[cId] = {};
                              for (var k in data_arr[i].tasks) {
                                  var taskid = data_arr[i].tasks[k].taskId;
                                  arr[cId][taskid] = {
                                      'progress': 0,
                                      'isok': 0,
                                      'total': 0
                                  };
                              }
                          }
                      }
      
                      //获取课程任务进度列表（new）tested
                      var param = {
                          'token': $api.getStorage('token'), //必须
                          'memberId' : getstor('memberId'),
                          'courseId': courseId, //课程ID,必须
                          'charpterId': '', //章节ID,非必须
                          'taskId': ''//任务ID,非必须
                      };
                      ajaxRequest({ 'origin': 'http://action.caicui.com/', 'pathname': 'api/userAction/course/getTasksProgress/v1.0/' }, 'get', param, function(ret, err) {
                      //ajaxRequest('api/v2/study/getTasksProgress', 'get', param, function (ret, err) {//008.022 获取课程任务进度列表（new）tested，接口编号：008-022
                          if (err) {
                              return false;
                          } else if (ret && ret.state == 'success') {
                              var tasksNum = 0;
                              var chaptersNum = 0;
                              //课程进度
                              for (var i in ret.data) {
                                  var tmpdata = ret.data[i];
                                  if(tmpdata.state == 1){
                                    tasksNum++;
                                  }
                                  if (!isEmpty(arr[tmpdata.chapterId]) && !isEmpty(arr[tmpdata.chapterId][tmpdata.taskId])) {
                                      if (tmpdata.state == 1) {
                                          arr[tmpdata.chapterId][tmpdata.taskId].isok = 3;
                                      } else {
                                          if (tmpdata.progress > 0) {
                                              arr[tmpdata.chapterId][tmpdata.taskId].isok = 1;
                                          } else {
                                              arr[tmpdata.chapterId][tmpdata.taskId].isok = 0;
                                          }
                                      }
                                      arr[tmpdata.chapterId][tmpdata.taskId].progress = tmpdata.progress;
                                      arr[tmpdata.chapterId][tmpdata.taskId].total = tmpdata.total;
                                  }
                              }
                              //处理过的课程进度
                              if (type == 'circle') {
                                  //获取圈圈样式
                                  if (from == 'video-menu') {
                                      $('#chaList').find('.dot-status').each(function () {
                                          var tmp_chapID = $(this).attr('data-chapId');
                                          if (!isEmpty(tmp_chapID) && !isEmpty(arr[tmp_chapID])) {
                                              var num = 0;
                                              var len = 0;
                                              for (var i in arr[tmp_chapID]) {
                                                  num += parseInt(arr[tmp_chapID][i].isok);
                                                  ++len;
                                              }
      
      
                                              if (num > 0) {
                                                  if (num == len * 3) {
                                                    chaptersNum++;
                                                      $(this).attr('type', '3');
                                                      //实心圈
                                                  } else {
                                                      //半圈
                                                      $(this).attr('type', '2');
                                                  }
                                              } else {
                                                  $(this).attr('type', '1');
                                                  //空圈
                                              }
      
                                          }
                                      });
                                  } else {
                                      $('#content').find('.dot-status').each(function () {
                                          var tmp_chapID = $(this).attr('data-chapId');
                                          if (!isEmpty(tmp_chapID) && !isEmpty(arr[tmp_chapID])) {
                                              var num = 0;
                                              var len = 0;
                                              for (var i in arr[tmp_chapID]) {
                                                  num += parseInt(arr[tmp_chapID][i].isok);
                                                  ++len;
                                              }
      
      
                                              if (num > 0) {
                                                  if (num == len * 3) {
                                                    chaptersNum++;
                                                      $(this).attr('type', '3');
                                                      //实心圈
                                                  } else {
                                                      //半圈
                                                      $(this).attr('type', '2');
                                                  }
                                              } else {
                                                  $(this).attr('type', '1');
                                                  //空圈
                                              }
      
                                          }
                                      });
                                  }
                              } else if (type == 'progress') {
                                  //如果是获取任务进度条
                                  $('#chaTask').find('.taskProgress').each(function () {
                                      $(this).css('width', '100%');
                                  });
                              }
                              api.sendEvent({
                                name : 'setChaptersNum',
                                extra : {
                                  'chaptersNum' : chaptersNum,
                                  'chaptersNumTotal' : course_detail.chapterNum
                                }
                              })
                              api.sendEvent({
                                name : 'setTasksNum',
                                extra : {
                                  'tasksNum' : tasksNum,
                                  'tasksNumTotal' : course_detail.taskNum
                                }
                              })
                          }
                      });
      
      
                  }
              });
          } else {
              course_detail = tmp_course_detail;//存储课程详细信息
              //处理过的课程进度
              //处理过的课程进度
              var arr = {};
              var data_arr = course_detail.chapters;
              for (var i in data_arr) {
                  if (data_arr[i].isLeaf == 'false') {
                      var child = data_arr[i].children;
                      for (var j in child) {
                          if (child[j].isLeaf == 'false') {
                              var child2 = child[j].children;
                              for (var k in child2) {
                                  var cId = child2[k].chapterId;
                                  arr[cId] = {};
                                  for (var x in child2[k].tasks) {
                                      //if (child[j].isLeaf == 'false') {
      
                                      //} else {
                                          var taskid = child2[k].tasks[x].taskId;
                                          arr[cId][taskid] = {
                                              'progress': 0,
                                              'isok': 0,
                                              'total': 0
                                          };
                                     // }
                                  }
                              }
                          } else {
                              var cId = child[j].chapterId;
                              arr[cId] = {};
                              for (var k in child[j].tasks) {
                                  var taskid = child[j].tasks[k].taskId;
                                  arr[cId][taskid] = {
                                      'progress': 0,
                                      'isok': 0,
                                      'total': 0
                                  };
                              }
                          }
                      }
                  } else {
                      var cId = data_arr[i].chapterId;
                      arr[cId] = {};
                      for (var k in data_arr[i].tasks) {
                          var taskid = data_arr[i].tasks[k].taskId;
                          arr[cId][taskid] = {
                              'progress': 0,
                              'isok': 0,
                              'total': 0
                          };
                      }
                  }
              }
      
      
              //获取课程任务进度列表（new）tested
              var param = {
                  'token': $api.getStorage('token'), //必须
                  'memberId' : getstor('memberId'),
                  'courseId': courseId, //课程ID,必须
                  'charpterId': '', //章节ID,非必须
                  'taskId': ''//任务ID,非必须
              };
              ajaxRequest({ 'origin': 'http://action.caicui.com/', 'pathname': 'api/userAction/course/getTasksProgress/v1.0/' }, 'get', param, function(ret, err) {
              //ajaxRequest('api/v2/study/getTasksProgress', 'get', param, function (ret, err) {//008.022 获取课程任务进度列表（new）tested，接口编号：008-022
                  if (err) {
                      return false;
                  } else if (ret && ret.state == 'success') {
                      var tasksNum = 0;
                      var chaptersNum = 0;
                      //课程进度
                      for (var i in ret.data) {
                          var tmpdata = ret.data[i];
                          if(tmpdata.state == 1){
                            tasksNum++;
                          }
                          if (!isEmpty(arr[tmpdata.chapterId]) && !isEmpty(arr[tmpdata.chapterId][tmpdata.taskId])) {
                              if (tmpdata.state == 1) {
                                  arr[tmpdata.chapterId][tmpdata.taskId].isok = 3;
                              } else {
                                  if (tmpdata.progress > 0) {
                                      arr[tmpdata.chapterId][tmpdata.taskId].isok = 1;
                                  } else {
                                      arr[tmpdata.chapterId][tmpdata.taskId].isok = 0;
                                  }
                              }
      
                              arr[tmpdata.chapterId][tmpdata.taskId].progress = tmpdata.progress;
                              arr[tmpdata.chapterId][tmpdata.taskId].total = tmpdata.total;
                          }
                      }
                      //处理过的课程进度
                      if (type == 'circle') {
                          if (from == 'video-menu') {
                              $('#chaList').find('.dot-status').each(function () {
                                  var tmp_chapID = $(this).attr('data-chapId');
      
                                  if (!isEmpty(tmp_chapID) && !isEmpty(arr[tmp_chapID])) {
                                      var num = 0;
                                      var len = 0;
                                      for (var i in arr[tmp_chapID]) {
                                          num += parseInt(arr[tmp_chapID][i].isok);
                                          ++len;
                                      }
      
                                      if (num > 0) {
                                          if (num == len * 3) {
                                            chaptersNum++;
                                              $(this).attr('type', '3');//实心圈
                                              //api.alert({msg: arr['ff8080814db86d41014dc1a26c4f0539']});
                                          } else {
                                              //半圈
                                              $(this).attr('type', '2');
                                          }
                                      } else {
                                          $(this).attr('type', '1');
                                          //空圈
                                      }
      
                                  }
                              });
                          } else {
                              $('#content').find('.dot-status').each(function () {
                                  var tmp_chapID = $(this).attr('data-chapId');
                                  if (!isEmpty(tmp_chapID) && !isEmpty(arr[tmp_chapID])) {
                                      var num = 0;
                                      var len = 0;
                                      for (var i in arr[tmp_chapID]) {
                                          num += parseInt(arr[tmp_chapID][i].isok);
                                          ++len;
                                      }
      
                                      if (num > 0) {
                                          if (num == len * 3) {
                                            chaptersNum++;
                                              $(this).attr('type', '3');
                                              //实心圈
                                          } else {
                                              //半圈
                                              $(this).attr('type', '2');
                                          }
                                      } else {
                                          $(this).attr('type', '1');
                                          //空圈
                                      }
      
                                  }
                              });
                          }
                      } else if (type == 'progress') {
                          //如果是获取任务进度条
                          $('#chaTask').find('.taskProgress').each(function () {
                              var tmp_chapID = chap_id;
                              var tmp_taskID = $(this).attr('data-taskid');
                              if (!isEmpty(tmp_chapID) && !isEmpty(tmp_taskID)) {
                                  var tmp_task_progress = arr[tmp_chapID][tmp_taskID];
                                  if (isEmpty(tmp_task_progress) || isEmpty(tmp_task_progress.isok)) {
                                      $(this).css('width', '0%');
                                  } else if (tmp_task_progress.isok == 3) {
                                      $(this).css('width', '100%');
                                  } else if (tmp_task_progress.isok == 0) {
                                      $(this).css('width', '0%');
                                  } else if (tmp_task_progress.isok == 1) {
                                      var tmpwidth = ((tmp_task_progress.progress * 100) / tmp_task_progress.total).toFixed(2) + '%';
                                      $(this).css('width', tmpwidth);
                                  }
                              } else {
                                  $(this).css('width', '0%');
                              }
                          });
                      }
                      api.sendEvent({
                        name : 'setChaptersNum',
                        extra : {
                          'chaptersNum' : chaptersNum,
                          'chaptersNumTotal' : course_detail.chapterNum
                        }
                      })
                      api.sendEvent({
                        name : 'setTasksNum',
                        extra : {
                          'tasksNum' : tasksNum,
                          'tasksNumTotal' : course_detail.taskNum
                        }
                      })
                  }
              });
          }
      }
    </script>
    <script type="text/javascript" src="../script/comm.js"></script>
    <script type="text/javascript" src="../script/doT.min.js"></script>
    <script type="text/javascript" src="../script/caicui.js"></script>
    <script type="text/javascript" src="../script/db.js"></script>
    <script type="text/javascript" src="../script/saveTasksProgress.js"></script>
    <script type="text/javascript" src="../script/pagejs/video-menu.js"></script>
  </body>
</html>