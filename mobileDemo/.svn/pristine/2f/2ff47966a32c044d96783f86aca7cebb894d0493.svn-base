extends ../layout/layout
block head
    link(rel='stylesheet',type='text/css', href='../css/about-note.css')
    link(rel='stylesheet', href='../css/z_style.css')
block body
    .qs-warp
        .course-question#content
        .courseStudyMore(onclick="more('course-question-head')",tapmode) 全部问答
    mixin lst
        | {{for(var p in it) { }}
        .section-note-content.course-question-content.note-content-Img(tapmode,data-id='{{=it[p].id}}',courseId='{{=it[p].courseId}}',taskId='{{=it[p].taskId}}',data-key='{{=it[p].memberId}}',onclick="to_detail(this,'question-detail-head')")
            .course-question-title
                p {{=it[p].title}}
            .section-note-top
                span
                    | {{if(!isEmpty(it[p].imgPath)) { }}
                .note-img
                    | {{ var imgPath=it[p].imgPath.split(','); }}
                    | {{ for(var i in imgPath) { }}
                    | {{if(i<=1){ }}
                    img(src='{{=static_url+imgPath[i]}}', alt='')
                    | {{ } }}
                    | {{ } }}
                | {{ } }}
                .note-font
                    p {{=!isEmpty(it[p].contentSummary)?it[p].contentSummary:''}}
            .section-note-message
                span
                    | {{if(it[p].taskprogress && parseInt(it[p].taskprogress) && !isEmpty(it[p].taskType)){ }}
                    i
                        img.video-link-img(src='../image/section-note-timer.png', alt='')
                    b {{=formatType(it[p].taskType,it[p].taskprogress)}}
                    | {{ } }}
                    b {{ if(!isEmpty(it[p].updateTime)) { }}{{=formatDate(it[p].updateTime,'Y')+'-'+formatDate(it[p].updateTime,'M')+'-'+formatDate(it[p].updateTime,'D')}} {{ } }}
                    b {{ if(!isEmpty(it[p].updateTime)) { }}{{=formatDate(it[p].updateTime,'h')+':'+formatDate(it[p].updateTime,'m')}} {{ } }}
                    b {{=it[p].nikeName}}
                span
                    i.icon-replys
                    b {{=!isEmpty(it[p].replyCount)?it[p].replyCount:0}}
        | {{ } }}
    script(id='tpl',type='text/x-dot-template')
        +lst
block scripts
    script(type='text/javascript').
        var pageSize = 10;
        var is_loding = false;
        function getData(page) {
            //            var tpl = $('#tpl').html();
            //            var content = doT.template(tpl);
            //            $('#content').html(content(data.data));
            //            return;
            var param = {};
            param.categoryId = api.pageParam.categoryId;
            param.subjectId = api.pageParam.subjectId;
            param.ordertype = 1;
            param.courseid = api.pageParam.course_id;
            param.pageNo = page;
            param.pageSize = pageSize;
            param.self = 0;
            param.token = $api.getStorage('token');
            if (page == 1 && show_pro && !is_loding) {
                api.showProgress({
                    title: '加载中',
                    modal: false
                });
            }
            ajaxRequest('api/studytools/questionlist/v2.1', 'get', param, function (ret, err) {//003.206
                is_loding = true;
                if (show_pro) {
                    api.hideProgress();
                }
                if (err) {
                    api.toast({
                        msg: err.msg,
                        location: 'middle'
                    });
                    return false;
                }
                var tpl = $('#tpl').html();
                var content = doT.template(tpl);
                if (ret && ret.state == 'success') {
                    var str = '';
                    if (ret.totalCount <= 0) {
                        str = '全部问答';
                    } else {
                        str = "全部问答（" + parseInt(ret.totalCount) + "）";
                    }
                    $('.courseStudyMore').html(str);
                    setTimeout(function () {
                        var b_h = parseInt(api.winHeight - 255); //255是头部的高度,延时是为了准确得到内容的高度
                        var w_h = $('.qs-warp').height();
                        if (w_h < b_h) {
                            $('body').addClass('fix-btn');
                        } else {
                            $('body').removeClass('fix-btn');
                        }
                    }, 300);


                    if (isEmpty(ret.data)) {
                        $('body').addClass('null');
                        return false;
                    }
                    $('body').removeClass('null');
                    $('#content').html(content(ret.data));
                    audioDom();
                    api.parseTapmode();
                }
                /*else {
                 api.toast({
                 msg: ret.msg,
                 location: 'middle'
                 });
                 }*/
            });
            setTimeout(function () {
                $('.courseStudyMore').addClass('show');
            }, 3000);
        }
        function more(link) {
            api.openWin({
                name: link,
                url: link + '.html',
                bgColor: '#000',
                opaque: true,
                reload: true,
                softInputMode: 'resize',
                pageParam: api.pageParam,
                vScrollBarEnabled: false
            });
        }
        function to_detail(e, link) {
            var id = $(e).data('id');
            var memberId = $(e).data('key');
            var task = $(e).attr('taskId');
            var taskId = isEmpty(task) || task == undefined || task == 'undefined' ? '任务id' : task;
            var courseId = $(e).attr('courseId');
            api.openWin({
                name: link,
                url: link + '.html',
                bgColor: '#000',
                opaque: true,
                reload: true,
                softInputMode: 'resize',
                pageParam: {id: id, qf: 'question-detail', memberId: memberId, taskId: taskId, courseId: courseId},
                vScrollBarEnabled: false
            });
        }
        apiready = function () {
            api.addEventListener({
                name: 'my-question-lx'
            }, function (ret) {
                getData(1);
            });
            //视频新建问答刷新页面
            api.addEventListener({
                name: 'create-question-f'
            }, function (ret) {
                getData(1);
            });

            getData(1);
        };
