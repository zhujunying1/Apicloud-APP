extends ../layout/layout
block html
    -var htmlClass='bg-white'
block head
    //link(rel='stylesheet', href='../css/common-component.css')
    link(rel='stylesheet', type='text/css', href='../css/about-note.css')
block body
    .chapter#content
    mixin lst1
        | {{for(var p in it) { }}
        .chapnote1(tapmode='tapcolor',data-id='{{=it[p].id}}',cont="{{=it[p].contentSummary}}",onclick="next(this,'notes-detial-top','{{=it[p].id}}','{{=it[p].memberId}}','{{=it[p].courseId}}','{{=it[p].charpterId}}','{{=it[p].coursename}}','{{=it[p].chaptername}}','{{=it[p].taskId}}','{{=it[p].taskprogress}}','{{=it[p].taskType}}')")
            .chapnote-img.clearfix
                | {{if(!isEmpty(it[p].imgPath)) { }}
                | {{ var imgPath=it[p].imgPath.split(','); }}
                | {{ for(var i in imgPath) { }}
                | {{if(i<1){ }}
                img(src='{{=static_url+imgPath[i]}}', alt='')
                | {{ } }}
                | {{ } }}
                | {{ } }}
                p.chaptext {{=!isEmpty(it[p].contentSummary)?it[p].contentSummary:''}}
            .chapti.clearfix
                | {{if(it[p].taskprogress && parseInt(it[p].taskprogress) && !isEmpty(it[p].taskType)){ }}
                p.chapdetti
                    span.icon-play-o.icon-style
                    span.timer  {{=formatType(it[p].taskType,it[p].taskprogress)}}
                | {{ } }}
                .chapinti
                    span {{=it[p].nikeName}}
                    span {{ if(!isEmpty(it[p].updateTime)) { }} {{=formatDate(it[p].updateTime,'h')+':'+formatDate(it[p].updateTime,'m')}} {{ } }}
                    span {{ if(!isEmpty(it[p].updateTime)) { }} {{=formatDate(it[p].updateTime,'Y')+'-'+formatDate(it[p].updateTime,'M')+'-'+formatDate(it[p].updateTime,'D')}} {{ } }}

                    .right
                        i.icon-thumb-up
                        b {{=it[p].praiseCount?it[p].praiseCount:'0'}}

                //-下面这段代码结构是错的，也没起作用--杨澍 20160216
                //| {{var uid = getstor('memberId');}}
                //| {{if(uid!=it[p].memberId){ }}
                //p.chapicon
                //    | {{if(it[p].favoriteCount){ }}
                //    span.icon-star.icon-style.col-me.thumb-love.icon-select(data-id='{{=it[p].id}}',onclick="coll(this);",tapmode)
                //        | {{ }else{ }}
                //    span.icon-star.icon-style.col-me(data-id='{{=it[p].id}}',onclick="coll(this);",tapmode)
                //        | {{ } }}
                //        b {{=it[p].favoriteCount?it[p].favoriteCount:'0'}}
                //    | {{if(it[p].praiseCount){ }}
                //    span.icon-thumb-up.lov-me.thumb-love.icon-style.icon-select(data-id='{{=it[p].id}}',data-co="{{=it[p].contentSummary}}",data-uid="{{=it[p].memberId}}",onclick="love(this);",tapmode)
                //        | {{ }else{ }}
                //    span.icon-thumb-up.lov-me.icon-style(data-id='{{=it[p].id}}',data-co="{{=it[p].contentSummary}}",data-uid="{{=it[p].memberId}}",onclick="love(this);",tapmode)
                //        | {{ } }}
                //        b {{=it[p].praiseCount?it[p].praiseCount:'0'}}
                //|{{ } }}


        | {{ } }}
    script(id='tpl1',type='text/x-dot-template')
        +lst1
    mixin lst2
        | {{for(var p in it) { }}
        | {{if(it[p].isPublic){ }}
        .chapnote1(tapmode='tapcolor',data-id='{{=it[p].id}}',cont="{{=it[p].contentSummary}}",onclick="next(this,'notes-detial-top','{{=it[p].id}}','{{=it[p].memberId}}','{{=it[p].courseId}}','{{=it[p].charpterId}}','{{=it[p].coursename}}','{{=it[p].chaptername}}','{{=it[p].taskId}}','{{=it[p].taskprogress}}','{{=it[p].taskType}}')")
            .chapnote-img.clearfix
                | {{if(!isEmpty(it[p].imgPath)) { }}
                | {{ var imgPath=it[p].imgPath.split(','); }}
                | {{ for(var i in imgPath) { }}
                | {{if(i<1){ }}
                img(src='{{=static_url+imgPath[i]}}', alt='')
                | {{ } }}
                | {{ } }}
                | {{ } }}
                p.chaptext {{=!isEmpty(it[p].contentSummary)?it[p].contentSummary:''}}
            .chapti.clearfix
                | {{if(it[p].taskprogress && parseInt(it[p].taskprogress) && !isEmpty(it[p].taskType)){ }}
                p.chapdetti
                    span.icon-play-o.icon-style
                    span.timer  {{=formatType(it[p].taskType,it[p].taskprogress)}}
                | {{ } }}
                p.chapinti
                    span {{=it[p].nikeName}}
                    span {{ if(!isEmpty(it[p].updateTime)) { }}  {{=formatDate(it[p].updateTime,'h')+':'+formatDate(it[p].updateTime,'m')}} {{ } }}
                    span {{ if(!isEmpty(it[p].updateTime)) { }}  {{=formatDate(it[p].updateTime,'Y')+'-'+formatDate(it[p].updateTime,'M')+'-'+formatDate(it[p].updateTime,'D')}} {{ } }}


                | {{var uid = getstor('memberId');}}
                | {{if(uid!=it[p].memberId){ }}
                p.chapicon
                    | {{if(it[p].favoriteCount){ }}
                    span.icon-star.icon-style.col-me.thumb-love.icon-select(data-id='{{=it[p].id}}',onclick="coll(this);",tapmode)
                        | {{ }else{ }}
                    span.icon-star.icon-style.col-me(data-id='{{=it[p].id}}',onclick="coll(this);",tapmode)
                        | {{ } }}
                        b {{=it[p].favoriteCount?it[p].favoriteCount:'0'}}
                    | {{if(it[p].praiseCount){ }}
                    span.icon-thumb-up.lov-me.thumb-love.icon-style.icon-select
                        | {{ }else{ }}
                    span.icon-thumb-up.lov-me.icon-style
                        | {{ } }}
                        b {{=it[p].praiseCount?it[p].praiseCount:'0'}}
                | {{ } }}
        | {{ } }}
        | {{ } }}
    script(id='tpl2',type='text/x-dot-template')
        +lst2
    mixin lst3
        | {{for(var p in it) { }}
        .chapnote1(tapmode='tapcolor',data-id='{{=it[p].id}}',cont="{{=it[p].contentSummary}}",onclick="next(this,'notes-detial-top','{{=it[p].id}}','{{=it[p].memberId}}','{{=it[p].courseId}}','{{=it[p].charpterId}}','{{=it[p].coursename}}','{{=it[p].chaptername}}','{{=it[p].taskId}}','{{=it[p].taskprogress}}','{{=it[p].taskType}}')")
            .chapnote-img.clearfix
                | {{if(!isEmpty(it[p].imgPath)) { }}
                | {{ var imgPath=it[p].imgPath.split(','); }}
                | {{ for(var i in imgPath) { }}
                | {{if(i<1){ }}
                img(src='{{=static_url+imgPath[i]}}', alt='')
                | {{ } }}
                | {{ } }}
                | {{ } }}
                p.chaptext {{=isEmpty(it[p].contentSummary) ? '' : it[p].contentSummary}}
            .chapti.clearfix
                | {{if(it[p].taskprogress && parseInt(it[p].taskprogress) && !isEmpty(it[p].taskType)){ }}
                p.chapdetti
                    span.icon-play-o.icon-style
                    span.timer  {{=formatType(it[p].taskType,it[p].taskprogress)}}
                | {{ } }}
                p.chapinti
                    span {{=it[p].nikeName}}
                    span {{ if(!isEmpty(it[p].updateTime)) { }}  {{=formatDate(it[p].updateTime,'h')+':'+formatDate(it[p].updateTime,'m')}} {{ } }}
                    span  {{ if(!isEmpty(it[p].updateTime)) { }} {{=formatDate(it[p].updateTime,'Y')+'-'+formatDate(it[p].updateTime,'M')+'-'+formatDate(it[p].updateTime,'D')}} {{ } }}

        | {{ } }}
    script(id='tpl3',type='text/x-dot-template')
        +lst3
block scripts
    script(type='text/javascript').
        var pageSize = 10;
        var total = '';
        var id;
        var is_loading = false;
        function getData(page) {
            var typ = api.pageParam.typ;
            if (typ == 'self') {
                typ = 1;
            } else {
                typ = 0;
            }
            var param = {};
            param.pageSize = pageSize;
            param.pageNo = page;
            param.charpterid = id;
            param.ordertype = 1;
            param.self = typ;
            param.token = $api.getStorage('token');
            if (page == 1 && show_pro && !is_loading) {
                api.showProgress({
                    title: '加载中',
                    modal: false
                });
            }
            ajaxRequest('api/studytools/nodelist/v2.1', 'get', param, function (ret, err) {//003.113.1
                is_loading = true;
                api.refreshHeaderLoadDone();
                if (show_pro) {
                    api.hideProgress();
                }
                if (err) {
                    $('body').addClass('null');
                    api.toast({
                        msg: err.msg,
                        location: 'middle'
                    });
                    return false;
                }
                if (typ == 1) {
                    tpl = $('#tpl1').html();
                } else {
                    tpl = $('#tpl2').html();
                }
                var content = doT.template(tpl);
                if (ret && ret.state == 'success') {
                    $api.setStorage('notes_info', ret.data[0]);
                    total = ret.totalCount;
                    if (page == 1) {
                        if (isEmpty(ret.data) || total == 0) {
                            $('#content').html('');
                            $('body').addClass('null');
                            return false;
                        }
                        $('body').removeClass('null');
                        $('#content').html(content(ret.data));
                    } else {
                        if (isEmpty(ret.data)) {
                            return false;
                        }
                        $('#content').append(content(ret.data));
                    }
                    api.parseTapmode();
                    if (api.pageParam.typ == 'self') {
                        $('.chapicon').addClass('none');
                    }
                    audioDom();
                    api.parseTapmode();
                }
                /*else {
                 api.toast({
                 msg: ret.msg,
                 location: 'middle'
                 });
                 }*/
            });
        }
        var pageNum = 10;
        function get(page) {
            if (isEmpty(keyword)) {
                api.toast({msg: '搜索内容不能为空'});
                return;
            }
            var param = {
                token: $api.getStorage('token'),
                keyWords: keyword, //支持多个关键字，用逗号或空格分开
                findType: 1,
                pageNo: page,
                pageSize: pageNum
            };
            api.showProgress({
                title: '搜索中',
                modal: false
            });
            //笔记搜索
            ajaxRequest('api/studytools/findcontent/v2.1', 'get', param, function (ret, err) {//003.002 内容搜索
                api.hideProgress();
                if (err) {
                    $('body').addClass('null');
                    api.toast({
                        msg: err.msg,
                        location: 'middle'
                    });
                    return false;
                }
                var tpl = $('#tpl3').html();
                var content = doT.template(tpl);
                if (ret && ret.state == 'success') {
                    if (page == 1) {
                        if (isEmpty(ret.data)) {
                            $('#content').html('');
                            $('body').addClass('null');
                            return false;
                        }
                        $('body').removeClass('null');
                        total = ret.totalCount;
                        $('#content').html(content(ret.data));
                    } else {
                        if (isEmpty(ret.data)) {
                            return false;
                        }
                        $('#content').append(content(ret.data));
                    }
                }
                /*else {
                 api.toast({
                 msg: ret.msg,
                 location: 'middle'
                 });
                 }*/
            });
        }
        apiready = function () {
            id = api.pageParam.id;
            api.addEventListener({
                name: 'bjxq'
            }, function (ret, err) {
                getData(1);
            });
            api.addEventListener({
                name: 'notes'
            }, function (ret, err) {
                //                        if(isEmpty(ret.value.keyword)){
                //                            api.toast({msg:'搜索内容不能为空'});
                //                            return;
                //                        }
                keyword = ret.value.keyword;
                get(1);
            });
            //                    if(api.pageParam.lx){
            //
            //                    }
            //var id = api.pageParam.id;//二级章节id
            getData(1);
            var currentPage = 1;
            api.setRefreshHeaderInfo({
                visible: true,
                loadingImg: 'widget://image/arrow-down-o.png',
                bgColor: '#f3f3f3',
                textColor: '#787b7c',
                textDown: '下拉更多',
                textUp: '松开刷新',
                showTime: false
            }, function (ret, err) {
                if (api.pageParam.lx) {
                    //get(1);
                } else {
                    getData(1);
                }
                currentPage = 1;
            });
            //滚动到底部
            api.addEventListener({
                name: 'scrolltobottom'
            }, function (ret, err) {
                if (currentPage < Math.ceil(total / pageSize)) {
                    currentPage++;
                    if (api.pageParam.lx) {
                        get(currentPage);
                    } else {
                        getData(currentPage);
                    }
                } else {
                    api.toast({
                        msg: '加载完毕',
                        location: 'middle'
                    });
                }
            });
            api.addEventListener({
                name: 'chapter-notes-f'
            }, function (ret) {
                id = ret.value.id;
                getData(1);
            });
            //接收详情页点赞和收藏监听，数量+1
            api.addEventListener({
                name: 'love_coll'
            }, function (ret) {
                if (ret && ret.value) {
                    var value = ret.value;
                    var ty = value.key2;
                    var num = value.key1;
                    if (ty == 'love') {
                        $('.lov-me').each(function (i) {
                            if ($('.lov-me').eq(i).data('id') == num) {
                                var htm = parseInt($('.lov-me').eq(i).find('b').html()) + 1;
                                $('.lov-me').eq(i).find('b').html(htm);
                                if (!$('.lov-me').eq(i).hasClass('icon-select')) {
                                    $('.lov-me').eq(i).addClass('icon-select');
                                }
                            }
                        });
                    }
                    if (ty == 'coll') {
                        $('.col-me').each(function (i) {
                            if ($('.col-me').eq(i).data('id') == num) {
                                var htm = parseInt($('.col-me').eq(i).find('b').html()) + 1;
                                $('.col-me').eq(i).find('b').html(htm);
                                if (!$('.col-me').eq(i).hasClass('icon-select')) {
                                    $('.col-me').eq(i).addClass('icon-select');
                                }
                            }
                        });
                    }
                }
            });
        };
        function next(e, link, bj_id, uid, courseId, charpterId, courseName, chapterName, taskId, taskProgress, taskType) {
            var param = {};
            param.bj_id = bj_id;
            param.uid = uid;
            param.contentSummary = $(e).attr('cont');
            param.courseId = courseId;
            param.charpterId = charpterId;
            param.courseName = courseName;
            param.chapterName = chapterName;
            param.taskId = taskId;
            param.taskProgress = isEmpty(taskProgress) || taskProgress == 'undefined' ? 0 : taskProgress;
            param.taskType = isEmpty(taskType) || taskType == 'undefined' ? '' : taskType;
            api.openWin({
                name: link,
                url: link + '.html',
                bgColor: '#000',
                opaque: true,
                reload: true,
                softInputMode: 'resize',
                pageParam: param,
                vScrollBarEnabled: false,
                animation: {
                    type: "push",                //动画类型（详见动画类型常量）
                    subType: "from_right",       //动画子类型（详见动画子类型常量）
                    duration: 300                //动画过渡时间，默认300毫秒
                }
            });
        }
        $('.delete').on('tap', function (e) {
            e.preventDefault();
            api.openFrame({
                name: 'Launch',
                url: 'Launch.html'
            });
        }, false);
        $('.chaptext').on('tap', function (e) {
            e.preventDefault();
            api.openFrame({
                name: 'notes-details',
                url: 'notes-details.html'
            });
        }, false);
        //点击点赞
        function love(e) {
            var param = {};
            param.id = $(e).data('id');
            param.type = 'note';
            param.title = $(e).attr('data-co');
            param.userId = $(e).attr('data-uid');
            param.token = $api.getStorage('token');
            ajaxRequest('api/studytools/commons/praise/v2.1', 'get', param, function (ret, err) {//003.001 点赞
                api.hideProgress();
                if (err) {
                    api.toast({
                        msg: err.msg,
                        location: 'middle'
                    });
                    return false;
                }
                if (ret && ret.state == 'success') {
                    var htm = parseInt($(e).find('b').html()) + 1;
                    $(e).find('b').html(htm);
                    if (!$(e).hasClass('icon-select')) {
                        $(e).addClass('icon-select');
                    }
                    api.toast({
                        msg: '点赞成功',
                        location: 'middle'
                    });
                }
                else {
                    api.toast({
                        msg: '点赞失败',
                        location: 'middle'
                    });
                }
            });
        }
        //点击收藏
        function coll(e) {
            var id = $(e).data('id');
            var param = {};
            param.noteId = id;
            param.token = $api.getStorage('token');
            ajaxRequest('api/v2/note/favorite', 'get', param, function (ret, err) {//003.117  笔记收藏
                api.hideProgress();
                if (err) {
                    api.toast({
                        msg: err.msg,
                        location: 'middle'
                    });
                    return false;
                }
                if (ret && ret.state == 'success') {
                    var htm = parseInt($(e).find('b').html()) + 1;
                    $(e).find('b').html(htm);
                    if (!$(e).hasClass('icon-select')) {
                        $(e).addClass('icon-select');
                    }
                    api.toast({
                        msg: '收藏成功',
                        location: 'middle'
                    });
                }
                else {
                    api.toast({
                        msg: '收藏失败',
                        location: 'middle'
                    });
                }
            });
        }