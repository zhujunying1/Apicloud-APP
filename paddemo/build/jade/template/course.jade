extends ../layout/layout
block head
    title 宽左侧框架
    link(rel='stylesheet', href='../css/swiper.min.css')
block body
    #header.header.header-white(tapmode,onclick="get_back()")
        //.left(tapmode, onclick="api.closeWin()")
        .left
            i.icon-arrow-left
        .left-txt 返回
        .center
    .course-slider#slider
        .data1.none
        .data2.none
        .s-top
            dl
                dd
                    p 章节
                    p.chapters
                dt
                    .circle-progress
                        .text 我的进度
                        #progressVal.val
                dd
                    p 作业
                    p.tasks
        .s-title(tapmode, onclick="play()")
            span 开始学习
            i.icon-play2-o
        ul.list-group#menuList
            -var vM = ['课程表','笔记','问答','讨论']
            -var vN = ['file','edit','ask','comments']
            each aM,i in vM
                li(class= i == 0 ? 'active' : '', onclick='openCourseHead(this,#{i})')
                    i(class='icon-' + vN[i] + '-o')
                    span!=aM
            li
                i.icon-male-o
                span
                    | 同学
                em
                    b 62
                    | /456
        .swiper-container
            .swiper-wrapper#content
            mixin lst
                .swiper-slide
                    ul.user-group
                        | {{for(var p in it){ }}
                        li(class='active')
                            img(src="../image/avatar.jpg")
                            p {{=it[p].userName}}
                        | {{ } }}
            script(id='tpl',type='text/x-dot-template')
                +lst
block scripts
    script(type='text/javascript', src='../script/swiper.min.js')
    script(type='text/javascript').
      var courseId;
      var course_detail;
      var study_progress;
      var my_task_info;
      apiready = function () {
          saveTasksProgress.getCourseTaskProgress([api.pageParam.courseId]);
          //alert(headLh + ' - ' + headSh + ' - ' + footSh + ' - ' + leftLw + ' - ' + leftSw + ' - ' + svgDown + ' - ' + svgAudio);
          //window.localStorage.frameSize = '';//避免在播放视频提问等页面直接退出程序时记忆窗口
          courseId = $api.getStorage('Course_info').courseId;
          $('.center').html(api.pageParam.courseName);
          var header = $api.byId('header');
          $api.fixIos7Bar(header);
          $('#slider').css('top', headLh);
          myFrame('course-chapter', 'course-head', false);
          get_tasks();
          api.addEventListener({
              name: 'keyback'
          }, function (ret) {
              get_back();
          });
      };
      //返回
      function get_back(){
          $api.rmStorage('Course_info');
          api.sendEvent({
              name:'flush_index'
          });
          api.closeWin();
      }
      function get_tasks() {
          var param = {};
          param.courseId =courseId;
          param.token = $api.getStorage('token');
          ajaxRequest({ 'origin': 'http://action.caicui.com/', 'pathname': 'api/userAction/course/getCourseProgress/v1.0/' }, 'get', {'token':getstor('token'),'memberId':getstor('memberId'),'courseId':api.pageParam.courseId}, function(ret, err) {
          //ajaxRequest('api/v2.1/study/getFinish', 'get', param, function (ret, err) {//008.021.1
              if (err) {
                  api.toast({
                      msg: err.msg,
                      location: 'middle'
                  });
                  return false;
              }
              if (ret && ret.state == 'success') {
                  var uid = getstor('memberId');
                  var cid =courseId;
                  var time1 = Date.now();
                  var data = isEmpty($api.getStorage(cid + '-' + uid)) ? '' : $api.getStorage(cid + '-' + uid);
                  if (data && time1 - data['time'] < course_detail_expire && !isEmpty(data['data'])) {
                      var res1 = ret.data[0];
                      var res2 = data['data'][0];
                      top_task(res1, res2);
                      circleProgress();
                  }else{
                      var param = {};
                      param.courseId =courseId;
                      param.token = $api.getStorage('token');
                      ajaxRequest('api/v2.1/course/courseDetail', 'get', param, function (rets, errs) {
                          if (errs) {
                              /*api.toast({
                                  msg: errs.msg
                              });*/
                          }
                          if (rets && rets.state == 'success' && rets.data) {
                              var res1 = ret.data[0];// $('input[name=data1]').val();
                              var res2 = rets.data[0];// $('input[name=data2]').val();
                              top_task(res1,res2);
                              $('.circle-progress').removeClass('svg-existing').find('svg').remove();
                              circleProgress();
                              var time_now = Date.now();
                              var data = {'time': time_now, 'data': rets.data};
                              $api.setStorage(cid + '-' + uid,data);
                          }
                      });
                  }
              }
          });
      }
      function top_task(res1,res2){
          var m1, m2, n1, n2, progress;
          if (isEmpty(res1)) {
              m1 = 0;
              m2 = 0;
              $('#progressVal').html(0);
          } else {
              var data1 = res1;
              //                m1=data1.charperSum;
              //                m2=data1.progressSum;
              m1 = data1.chapterSum;
              //m2 = data1.progressSum;
              m2 = data1.courseProgress;
              progress = data1.progress;
          }
          if (isEmpty(res2)) {
              n1 = 0;
              n2 = 0;
              $('#progressVal').html(0);
          } else {
              var data2 = res2;
              n1 = data2.chapterNum;
              n2 = data2.taskNum;
          }
          var htm1 = m1 + '/' + n1;
          var htm2 = m2 + '/' + n2;
          //- $('.chapters').html(htm1);
          $('.chapters').html('0/'+n1);
          $('.tasks').html(htm2);
          //$('.pro').html((m2 / n2) * 100);
          if (!isEmpty(res1) && !isEmpty(res2)) {
              //- $('#progressVal').html(parseInt(m2 / n2 * 100));
              if(m2 && n2){
                $('.val').html(parseInt(m2 / n2 * 100));
              }else if(progress){
                $('#progressVal').html(1);
              }
          }
          circleProgress();
      }
      var mySwiper = new Swiper('.swiper-container', {
          onSlideNextStart: function (swiper) {
              get_classmate(2);
          }
      });
      function setFA(e,s){
          api.setFrameAttr({
              name: e,
              hidden: s
          });
      }
      function setFGA(e,s){
          api.setFrameGroupAttr({
              name: e,
              hidden: s
          });
      }
      function closeSearch() {
          api.closeFrame({name: 'course-note-all'});
          api.closeFrame({name: 'course-answer-all'});
          api.closeFrame({name: 'footer-answer'}); //问答补充编辑条
      }
      function openCourseHead(obj,a){
          closeSearch();
          var clas = $(obj).attr('class');
          var undo = $(obj).attr('undo');
          if (clas == 'active' || a == 4) {
              return false;
          } else {
              api.sendEvent({
                  name: 'closeFrameAll'
              });
              setFA('course-chapter', true);
              setFA('course-chapter-f', true);
              setFA('course-note-chapter', true);
              setFGA('chapterFrameGroup', true);
              setFA('course-answer', true);
              setFGA('answerFrameGroup', true);
              setFA('course-talk', true);
              setFA('course-talk-f', true);
              if (undo == 'y') {
                  if (a == 0) {
                      setFA('course-chapter', false);
                      setFA('course-chapter-f', false);
                  } else if (a == 1) {
                      setFA('course-note-chapter', false);
                      setFGA('chapterFrameGroup', false);
                  } else if (a == 2) {
                      setFA('course-answer', false);
                      setFGA('answerFrameGroup', false);
                  } else if (a == 3) {
                      setFA('course-talk', false);
                      setFA('course-talk-f', false);
                  }
              } else {
                  if (a == 0) {
                      myFrame('course-chapter', 'course-head', false);
                  } else if (a == 1) {
                      myFrame('course-note-chapter', 'course-head', false);
                  } else if (a == 2) {
                      myFrame('course-answer', 'course-head', false);
                  } else if (a == 3) {
                      myFrame('course-talk', 'course-head', false);
                  }
              }
              $('ul.list-group li').removeClass().eq(a).addClass('active').attr('undo', 'y');
          }
      }
      //获取共同战斗的同学
      var data = {
          "totalCount": 22, //总记录数
          "pageNo": 1,  // 页码
          "pageSize": 5, //每页记录数
          "data": [{
              "userId": "ff8080814fd42d2c014fde38088022e2", //用户id
              "userName": "星空史莱姆",  //用户名
              "signature": "", //用户签名
              "headPath": "/upload/avatar/big_ff8080814fd42d2c014fde38088022e2.jpg" //头像
          }, {
              "userId": "ff8080814ef32d52014ef7194e040ce3",
              "userName": "wangtiantian",
              "signature": null,
              "headPath": "/upload/avatar/big_0.png"
          }, {
              "userId": "ff8080814b86b9a3014b86bec1e00018",
              "userName": "balance_xu",
              "signature": "",
              "headPath": "/upload/avatar/big_0.png"
          }, {
              "userId": "ff8080814f0b23a2014f1bdebf9d39b9",
              "userName": "wangfengyu",
              "signature": null,
              "headPath": "/upload/avatar/big_0.png"
          }, {
              "userId": "ff8080814e9aeb67014ea8ee476c2f06",
              "userName": "lixuefei",
              "signature": null,
              "headPath": "/upload/avatar/big_0.png"
          }, {
              "userId": "ff8080814ef32d52014ef7194e040ce3",
              "userName": "wangtiantian",
              "signature": null,
              "headPath": "/upload/avatar/big_0.png"
          }, {
              "userId": "ff8080814ef32d52014ef7194e040ce3",
              "userName": "wangtiantian",
              "signature": null,
              "headPath": "/upload/avatar/big_0.png"
          }, {
              "userId": "ff8080814ef32d52014ef7194e040ce3",
              "userName": "wangtiantian",
              "signature": null,
              "headPath": "/upload/avatar/big_0.png"
          }
          ],
          "state": "success",
          "msg": ""
      };
      get_classmate(1);
      function get_classmate(page) {
          var tpl = $('#tpl').html();
          var content = doT.template(tpl);
          if (page == 1) {
              $('#content').html(content(data.data));
      
          } else {
              $('#content').append(content(data.data));
          }
          var mySwiper = new Swiper('.swiper-container', {
              onTouchStart: function (swiper, even) {
              }
          });
          return false;
          var param = {};
          param.token = $api.getStorage('token');
          param.courseId =courseId;
          param.pageSize = pageSize;
          param.pageNo = page;
          ajaxRequest('api/v2/course/fighter', 'post', param, function (ret, err) {//008.005
              if (err) {
                  api.toast({
                      msg: err.msg,
                      location: 'middle'
                  });
              }
              if (ret && ret.state == 'success') {
                  var tpl = $('#tpl').html();
                  var content = doT.template(tpl);
                  total = ret.totalCount;
                  $('#exam_content').html(content(ret.data));
              } else {
                  /*api.toast({
                      msg: ret.msg,
                      location: 'middle'
                  });*/
              }
          });
      }
      function get_last_task(study_progress, course_detail){
          if (isEmpty(course_detail) || isEmpty(course_detail.chapters)) {
                  api.toast({
                      msg: '未获取到课程信息',
                      location: 'middle'
                  });
                  return false;
          } else {
              var task_arr = save_tasks(course_detail);
              var res_process = {
                  last_progress: 0
              };
              if (isEmpty(study_progress)) {
                            //如果没有学习进度,则从第一个学习任务开始学习,找到第一学习任务
                  for(var i in task_arr) {
                      res_process['task_info'] = task_arr[i];
                      break;
                  }
                  judge_task(res_process, course_detail);
              } else {
                  var tmp_taskId = study_progress.taskId;//上次学习任务id
                  var tmp_state = study_progress.state;//上次学习任务是否已经学完(init:未学完,complate:已完成)
                  var tmp_progress = study_progress.progress;//上次学习任务的进度
                  if (tmp_state == 'complate') {
                      var flag = false;
                      var is_find = false;
                      for (var i in task_arr) {
                          if (flag == true) {
                              if (!isEmpty(task_arr[i]) && !isEmpty(task_arr[i].taskInfo)) {
                                  res_process.task_info = task_arr[i].taskInfo;
                                  is_find = true;
                              }
                              break;
                          } else {
                              if (i == tmp_taskId) {
                                  flag = true;
                              }
                          }
                      }
                      if (!is_find) {
                          if (type == 1) {
                              api.toast({
                                  msg: '没有更多任务啦',
                                  location: 'middle'
                              });
                              return false;
                          }
                      } else {
                          judge_task(res_process, course_detail);
                      }
                  } else {
                      res_process.task_info = task_arr[tmp_taskId];
                      res_process.last_progress = tmp_progress;
                      judge_task(res_process, course_detail);
                  }
              }
          }
      }
      function get_course_detail(callback){
          api.showProgress({
              title: '加载中',
              modal: false
          });
          var tmp_course_detail = $api.getStorage(courseId);
          if (isEmpty(tmp_course_detail) || isEmpty(tmp_course_detail['chapters'])) {
              ajaxRequest('api/v2.1/course/courseDetail', 'get', {courseId: courseId}, function (ret, err) {//004.006获取课程的详细信息
                  if (err) {
                      api.hideProgress();
                      api.toast({
                          msg: err.msg,
                          location: 'middle'
                      });
                      return false;
                  }
                  if (ret && ret.state == 'success') {
                      tmp_course_detail = ret.data[0];//课程详情数据
                      $api.setStorage(courseId, tmp_course_detail);
                      callback(tmp_course_detail);
                  }
              });
          }else{
              callback(tmp_course_detail);
          }
      }
      //点击页面上的在学课程，跳转学习课程页面
      //点击页面上的在学课程，跳转学习课程页面
      function play() {
          get_course_detail(function(ret){
              if(ret){
                  course_detail=ret;
                  getLastProgress(ret);//用户上次的学习进度
              }
          });
      }
      //判断任务类型，跳转相应的页面
      function judge_task(res_process, course_detail) {
          if (isEmpty(course_detail) || isEmpty(course_detail.chapters) || isEmpty(res_process)) {
              api.toast({
                  msg: '获取课程信息失败',
                  location: 'middle'
              });
              return false;
          }
          var task_info = res_process.task_info.taskInfo;//当前任务信息
              if (isEmpty(task_info)) {
                  api.toast({
                  msg: '暂无任务',
                  location: 'middle'
                  });
                  return false;
          }
      
          if (isEmpty(task_info)) {
              api.toast({
                  msg: '暂无任务',
                  location: 'middle'
              });
              return false;
          }
          //判断当前任务类型
          if (task_info.taskType == 'video') {
              //视频类型
              var new_win_name = 'video';
              var new_win_url = 'video.html';
          } else if (task_info.taskType == 'entry' || task_info.taskType == 'pdfread' || task_info.taskType == 'exam') {
              //entry（外链类型）、pdfread（pdf类型）、exam（测试题类型）
              var new_win_name = 'course-test';
              var new_win_url = 'course-test.html';
          } else {
              api.toast({
                  msg: '暂无任务，请稍后再试或联系客服',
                  location: 'middle'
              });
              return false;
          }
          //需要传递的参数
          var pageParams = {
              from: 'course-studying',
              courseId: courseId,//课程id
              //study_progress: res_process,//学习进度
              last_progress: res_process.last_progress,//学习进度
              course_detail: course_detail,//课程详情
              //chapters_num: res_process.chapters_num,//一级章节索引
              //chapters_child_num: res_process.chapters_child_num,//二级章节索引
              //child_task_num: res_process.child_task_num,//任务索引
              task_info: task_info,//当前要学习的任务信息
              type: 'task'
          };
          api.hideProgress();
          //跳转到播放页面
          api.openWin({
              name: new_win_name,
              url: new_win_url,
              delay: 200,
              slidBackEnabled: false,//iOS7.0及以上系统中，禁止通过左右滑动返回上一个页面
              pageParam: pageParams
          });
      }
      //获取上一次的学习进度
      function getLastProgress(course_detail) {
              //如果没有缓存，重新请求接口
              //var tmpParam = {
              //    'token': $api.getStorage('token'),//必须
              //    'memberId': get_loc_val('mine', 'memberId'),
              //    'categoryId': course_detail.categoryId,//非必须
              //    'subjectId': course_detail.subjectId,//非必须
              //    'courseId': courseId,//非必须
              //    'chapterId': '',//非必须
              //    'taskId': ''//非必须
              //};
              //(实时)最后一次任务状态（new）tested,编号:008.026,GET - /api/v2.1/chapter/tasklastProgress
              //ajaxRequest('api/v2.1/chapter/tasklastProgress', 'get', tmpParam, function (ret, err) {//008.026 最后一次任务状态（new）tested，接口编号：008-026
              //获取课程任务进度列表（new）tested
              var param = {
                    'token': $api.getStorage('token'), //必须
                    'memberId' : getstor('memberId'),
                    'courseId': courseId, //课程ID,必须
                };
                ajaxRequest({ 'origin': 'http://action.caicui.com/', 'pathname': 'api/userAction/course/getTasksProgress/v1.0/' }, 'get', param, function(ret, err) {
                  if (err) {
                      api.hideProgress();
                      api.toast({
                          msg: err.msg,
                          location: 'middle'
                      });
                      return false;
                  }
                  if (ret && ret.state == 'success') {
      
              
              var lastProgressData = ret.data;
              var i = 0,
                  len = lastProgressData.length,
                  j, d;
              for (; i < len; i++) {
                  for (j = 0; j < len; j++) {
                      if (parseInt(lastProgressData[i].createDate) > parseInt(lastProgressData[j].createDate)) {
                          d = lastProgressData[j];
                          lastProgressData[j] = lastProgressData[i];
                          lastProgressData[i] = d;
                      }
                  }
              }
                //$api.setStorage(nickName + courseId, ret.data);
                var study_progress = ret.data;
                //var res_process = findTask(study_progress, course_detail, '', '', false);//根据进度和课程信息，找到要学习的任务
                get_last_task(lastProgressData[0], course_detail);//根据进度和课程信息，找到要学习的任务
                /*
                 if (isEmpty(res_process)) {
                 return false;
                 } else {
                 judge_task(res_process, course_detail);
                 }
                 */
            }
                  // if (ret && ret.state == 'success') {
                  //     study_progress = ret.data;
                  //     get_last_task(function (ret) {
                  //         judge_task(ret);
                  //     },);
                  // }
              });
      }
